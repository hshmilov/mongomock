# ::format::
# [name]
# view = mongodb json dumps of the view
# Since a view is a complex thing we must paste the actual mongodb query here.
# So to make a new view, just save it through the gui, connect to the db, and then paste the "view" section
# of the view here.

[AD Printers]
view = {
        "page" : 0,
        "pageSize" : 20,
        "fields" : [
            "specific_data.data.hostname",
            "specific_data.data.network_interfaces.ips",
            "adapters_data.active_directory_adapter.ad_printers.name",
            "adapters_data.active_directory_adapter.ad_printers.location_name",
            "adapters_data.active_directory_adapter.ad_printers.driver_name",
            "adapters_data.active_directory_adapter.ad_printers.share_name",
            "specific_data.data.domain"
        ],
        "coloumnSizes" : [],
        "query" : {
            "filter" : "(adapters_data.active_directory_adapter.ad_printers.name == exists(true) and adapters_data.active_directory_adapter.ad_printers.name != \"\")",
            "expressions" : [
                {
                    "logicOp" : "",
                    "not" : false,
                    "leftBracket" : false,
                    "field" : "adapters_data.active_directory_adapter.ad_printers.name",
                    "compOp" : "exists",
                    "value" : null,
                    "rightBracket" : false,
                    "i" : 0
                }
            ]
        },
        "sort" : {
            "field" : "",
            "desc" : true
        }
    }

[AD DFSR Shares]
view = {
        "page" : 0,
        "pageSize" : 20,
        "fields" : [
            "specific_data.data.hostname",
            "specific_data.data.network_interfaces.ips",
            "adapters_data.active_directory_adapter.ad_dfsr_shares.name",
            "adapters_data.active_directory_adapter.ad_dfsr_shares.content"
        ],
        "coloumnSizes" : [],
        "query" : {
            "filter" : "(adapters_data.active_directory_adapter.ad_dfsr_shares.name == exists(true) and adapters_data.active_directory_adapter.ad_dfsr_shares.name != \"\")",
            "expressions" : [
                {
                    "logicOp" : "",
                    "not" : false,
                    "leftBracket" : false,
                    "field" : "adapters_data.active_directory_adapter.ad_dfsr_shares.name",
                    "compOp" : "exists",
                    "value" : null,
                    "rightBracket" : false,
                    "i" : 0
                }
            ]
        },
        "sort" : {
            "field" : "",
            "desc" : true
        }
    }

[AD Domain Controllers]
view = {
        "page" : 0,
        "pageSize" : 20,
        "fields" : [
            "specific_data.data.domain",
            "adapters_data.active_directory_adapter.ad_is_dc",
            "adapters_data.active_directory_adapter.ad_dc_infra_master",
            "adapters_data.active_directory_adapter.ad_dc_gc",
            "adapters_data.active_directory_adapter.ad_dc_rid_master",
            "adapters_data.active_directory_adapter.ad_dc_pdc_emulator",
            "adapters_data.active_directory_adapter.ad_dc_naming_master",
            "adapters_data.active_directory_adapter.ad_dc_schema_master",
            "specific_data.data.hostname"
        ],
        "coloumnSizes" : [],
        "query" : {
            "filter" : "adapters_data.active_directory_adapter.ad_is_dc == true",
            "expressions" : [
                {
                    "logicOp" : "",
                    "not" : false,
                    "leftBracket" : false,
                    "field" : "adapters_data.active_directory_adapter.ad_is_dc",
                    "compOp" : "true",
                    "value" : "",
                    "rightBracket" : false,
                    "i" : 0
                }
            ]
        },
        "sort" : {
            "field" : "",
            "desc" : true
        }
    }

[AD Forest Exchange Servers]
view = {
        "page" : 0,
        "pageSize" : 20,
        "fields" : [
            "specific_data.data.hostname",
            "specific_data.data.domain",
            "adapters_data.active_directory_adapter.ad_is_exchange_server",
            "adapters_data.active_directory_adapter.ad_exchange_server_roles",
            "adapters_data.active_directory_adapter.ad_exchange_server_serial",
            "adapters_data.active_directory_adapter.ad_exchange_server_admin_group",
            "adapters_data.active_directory_adapter.ad_exchange_server_product_id",
            "adapters_data.active_directory_adapter.ad_exchange_server_organization"
        ],
        "coloumnSizes" : [],
        "query" : {
            "filter" : "adapters_data.active_directory_adapter.ad_is_exchange_server == true",
            "expressions" : [
                {
                    "logicOp" : "",
                    "not" : false,
                    "leftBracket" : false,
                    "field" : "adapters_data.active_directory_adapter.ad_is_exchange_server",
                    "compOp" : "true",
                    "value" : "",
                    "rightBracket" : false,
                    "i" : 0
                }
            ]
        },
        "sort" : {
            "field" : "",
            "desc" : true
        }
    }

[AD Enabled Devices With Bad Configurations]
view = {
        "page" : 0,
        "pageSize" : 20,
        "fields" : [
            "specific_data.data.hostname",
            "specific_data.data.os.type",
            "specific_data.data.network_interfaces.ips",
            "adapters_data.active_directory_adapter.ad_uac_dont_expire_password",
            "adapters_data.active_directory_adapter.ad_delegation_policy"
        ],
        "coloumnSizes" : [],
        "query" : {
            "filter" : "(adapters_data.active_directory_adapter.device_disabled == false and adapters_data.active_directory_adapter.ad_delegation_policy == \"Trust For Delegation To Any Service\" and adapters_data.active_directory_adapter.ad_is_dc == false) or (adapters_data.active_directory_adapter.device_disabled == false and adapters_data.active_directory_adapter.ad_uac_dont_expire_password == true)",
            "expressions" : [
                {
                    "logicOp" : "",
                    "not" : false,
                    "leftBracket" : true,
                    "field" : "adapters_data.active_directory_adapter.ad_delegation_policy",
                    "compOp" : "equals",
                    "value" : "Trust For Delegation To Any Service",
                    "rightBracket" : false,
                    "i" : 0
                },
                {
                    "logicOp" : "and",
                    "not" : false,
                    "leftBracket" : false,
                    "field" : "adapters_data.active_directory_adapter.ad_is_dc",
                    "compOp" : "false",
                    "value" : "",
                    "rightBracket" : true,
                    "i" : 1
                },
                {
                    "logicOp" : "or",
                    "not" : false,
                    "leftBracket" : false,
                    "field" : "adapters_data.active_directory_adapter.ad_uac_dont_expire_password",
                    "compOp" : "true",
                    "value" : "",
                    "rightBracket" : false,
                    "i" : 2
                }
            ]
        },
        "sort" : {
            "field" : "",
            "desc" : true
        }
    }

[AD Enabled Critical Assets]
view = {
        "page" : 0,
        "pageSize" : 20,
        "fields" : [
            "specific_data.data.hostname",
            "specific_data.data.os.type",
            "specific_data.data.network_interfaces.ips",
            "adapters_data.active_directory_adapter.ad_is_exchange_server",
            "adapters_data.active_directory_adapter.ad_is_dc",
            "adapters_data.active_directory_adapter.ad_dc_gc",
            "adapters_data.active_directory_adapter.ad_dc_is_dhcp_server"
        ],
        "coloumnSizes" : [],
        "query" : {
            "filter" : "adapters_data.active_directory_adapter.device_disabled == false and (adapters_data.active_directory_adapter.ad_is_dc == true or adapters_data.active_directory_adapter.ad_is_exchange_server == true or adapters_data.active_directory_adapter.ad_dc_is_dhcp_server == true)",
            "expressions" : [
                {
                    "compOp" : "true",
                    "field" : "adapters_data.active_directory_adapter.ad_is_dc",
                    "i" : 0,
                    "leftBracket" : false,
                    "logicOp" : "",
                    "not" : false,
                    "rightBracket" : false,
                    "value" : ""
                },
                {
                    "compOp" : "true",
                    "field" : "adapters_data.active_directory_adapter.ad_is_exchange_server",
                    "i" : 1,
                    "leftBracket" : false,
                    "logicOp" : "or",
                    "not" : false,
                    "rightBracket" : false,
                    "value" : ""
                },
                {
                    "logicOp" : "or",
                    "not" : false,
                    "leftBracket" : false,
                    "field" : "adapters_data.active_directory_adapter.ad_dc_is_dhcp_server",
                    "compOp" : "true",
                    "value" : "",
                    "rightBracket" : false,
                    "i" : 2
                }
            ]
        },
        "sort" : {
            "desc" : true,
            "field" : ""
        }
    }
