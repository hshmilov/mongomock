FROM debian:buster-slim AS builder

RUN apt-get update && apt-get install -y git pkg-config build-essential curl pkg-config libjemalloc-dev

RUN cd /tmp && mkdir temp_openssl && \
	cd temp_openssl && curl -O https://www.openssl.org/source/openssl-fips-2.0.16.tar.gz && \
		tar xf openssl-fips-2.0.16.tar.gz && \
		cd openssl-fips-2.0.16 && \
		./config && \
		make && \
		make install

RUN cd /tmp/temp_openssl && curl -O https://www.openssl.org/source/old/1.0.2/openssl-1.0.2u.tar.gz && \
    tar xf openssl-1.0.2u.tar.gz && \
    cd openssl-1.0.2u && \
    ./config shared fips --with-fipslibdir=/usr/local/ssl/fips-2.0/lib/ && \
    make depend && \
    make && \
    make install

RUN echo "/usr/local/ssl/lib" > /etc/ld.so.conf.d/openssl.conf && \
		ldconfig && \
		mv /usr/bin/openssl /usr/bin/openssl.old && \
		ln -s /usr/local/ssl/bin/openssl /usr/bin/openssl && \
		ln -s /etc/ssl/certs/*.* /usr/local/ssl/certs/

RUN rm -rf /tmp/temp_openssl && ldconfig

RUN cd /usr/local/lib && ln -s ../ssl/lib/* .
RUN cd /usr/local/include && ln -s ../ssl/include/openssl .

RUN cd /tmp/ && git clone https://github.com/redis/redis.git && cd redis && \
	git checkout 6.0.8 && \
	make BUILD_TLS=yes

RUN strip -s /tmp/redis/src/redis-benchmark && \
    strip -s /tmp/redis/src/redis-check-aof && \
    strip -s /tmp/redis/src/redis-check-rdb && \
    strip -s /tmp/redis/src/redis-cli && \
    strip -s /tmp/redis/src/redis-sentinel && \
    strip -s /tmp/redis/src/redis-server

###############################################################################################################
# Mostly taken from https://github.com/docker-library/redis/blob/master/6.0/Dockerfile
FROM debian:buster-slim AS runner

# add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added
RUN groupadd -r -g 999 redis && useradd -r -g redis -u 999 redis

# grab gosu for easy step-down from root
# https://github.com/tianon/gosu/releases
ENV GOSU_VERSION 1.12
RUN set -eux; \
	savedAptMark="$(apt-mark showmanual)"; \
	apt-get update; \
	apt-get install -y --no-install-recommends ca-certificates dirmngr gnupg wget; \
	rm -rf /var/lib/apt/lists/*; \
	dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"; \
	wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"; \
	wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"; \
	export GNUPGHOME="$(mktemp -d)"; \
	gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \
	gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \
	gpgconf --kill all; \
	rm -rf "$GNUPGHOME" /usr/local/bin/gosu.asc; \
	apt-mark auto '.*' > /dev/null; \
	[ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null; \
	apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \
	chmod +x /usr/local/bin/gosu; \
	gosu --version; \
	gosu nobody true

ENV REDIS_VERSION 6.0.8
ENV REDIS_DOWNLOAD_URL http://download.redis.io/releases/redis-6.0.8.tar.gz
ENV REDIS_DOWNLOAD_SHA 04fa1fddc39bd1aecb6739dd5dd73858a3515b427acd1e2947a66dadce868d68

RUN set -eux; \
	\
	savedAptMark="$(apt-mark showmanual)"; \
	apt-get update; \
	apt-get install -y --no-install-recommends \
		ca-certificates \
		wget \
		\
		gcc \
		build-essential \
		curl \
		libc6-dev \
		libssl-dev \
		pkg-config \
		make \
	; \
	rm -rf /var/lib/apt/lists/*; \
	\
	wget -O redis.tar.gz "$REDIS_DOWNLOAD_URL"; \
	echo "$REDIS_DOWNLOAD_SHA *redis.tar.gz" | sha256sum -c -; \
	mkdir -p /usr/src/redis; \
	tar -xzf redis.tar.gz -C /usr/src/redis --strip-components=1; \
	rm redis.tar.gz; \
	\
# disable Redis protected mode [1] as it is unnecessary in context of Docker
# (ports are not automatically exposed when running inside Docker, but rather explicitly by specifying -p / -P)
# [1]: https://github.com/redis/redis/commit/edd4d555df57dc84265fdfb4ef59a4678832f6da
	grep -E '^ *createBoolConfig[(]"protected-mode",.*, *1 *,.*[)],$' /usr/src/redis/src/config.c; \
	sed -ri 's!^( *createBoolConfig[(]"protected-mode",.*, *)1( *,.*[)],)$!\10\2!' /usr/src/redis/src/config.c; \
	grep -E '^ *createBoolConfig[(]"protected-mode",.*, *0 *,.*[)],$' /usr/src/redis/src/config.c; \
# for future reference, we modify this directly in the source instead of just supplying a default configuration flag because apparently "if you specify any argument to redis-server, [it assumes] you are going to specify everything"
# see also https://github.com/docker-library/redis/issues/4#issuecomment-50780840
# (more exactly, this makes sure the default behavior of "save on SIGTERM" stays functional by default)
	\
	export BUILD_TLS=yes; \
	make -C /usr/src/redis -j "$(nproc)" all; \
	make -C /usr/src/redis install; \
	\
# TODO https://github.com/redis/redis/pull/3494 (deduplicate "redis-server" copies)
	serverMd5="$(md5sum /usr/local/bin/redis-server | cut -d' ' -f1)"; export serverMd5; \
	find /usr/local/bin/redis* -maxdepth 0 \
		-type f -not -name redis-server \
		-exec sh -eux -c ' \
			md5="$(md5sum "$1" | cut -d" " -f1)"; \
			test "$md5" = "$serverMd5"; \
		' -- '{}' ';' \
		-exec ln -svfT 'redis-server' '{}' ';' \
	; \
	\
	rm -r /usr/src/redis; \
	\
	apt-mark auto '.*' > /dev/null; \
	[ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null; \
	find /usr/local -type f -executable -exec ldd '{}' ';' \
		| awk '/=>/ { print $(NF-1) }' \
		| sort -u \
		| xargs -r dpkg-query --search \
		| cut -d: -f1 \
		| sort -u \
		| xargs -r apt-mark manual;

RUN mkdir temp_openssl
# Build Fips object module
RUN cd temp_openssl && curl -O https://www.openssl.org/source/openssl-fips-2.0.16.tar.gz && \
    tar xf openssl-fips-2.0.16.tar.gz && \
    cd openssl-fips-2.0.16 && \
    ./config && \
    make && \
    make install

# Build OpenSSL with FIPS
RUN cd temp_openssl && curl -O https://www.openssl.org/source/old/1.0.2/openssl-1.0.2u.tar.gz && \
    tar xf openssl-1.0.2u.tar.gz && \
    cd openssl-1.0.2u && \
    ./config shared fips --with-fipslibdir=/usr/local/ssl/fips-2.0/lib/ && \
    make depend && \
    make && \
    make install

RUN echo "/usr/local/ssl/lib" > /etc/ld.so.conf.d/openssl.conf && \
    ldconfig && \
    mv /usr/bin/openssl /usr/bin/openssl.old && \
    ln -s /usr/local/ssl/bin/openssl /usr/bin/openssl && \
    ln -s /etc/ssl/certs/*.* /usr/local/ssl/certs/

RUN rm -f /etc/ld.so.cache && ldconfig

RUN rm -rf temp_openssl

RUN mkdir /data && chown redis:redis /data
VOLUME /data
WORKDIR /data

RUN apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false;

COPY redis-benchmark /usr/src/redis/redis-benchmark
COPY redis-check-aof /usr/src/redis/redis-check-aof
COPY redis-check-rdb /usr/src/redis/redis-check-rdb
COPY redis-cli /usr/src/redis/redis-cli
COPY redis-sentinel /usr/src/redis/redis-sentinel
COPY redis-server /usr/src/redis/redis-server

COPY docker-entrypoint.sh /usr/local/bin/
ENTRYPOINT ["docker-entrypoint.sh"]

CMD ["redis-server"]
