# Code generated by go generate; DO NOT EDIT THIS FILE. 
# This file was generated at 2020-04-19T22:48:14+03:00
directive @generateInputs(where: String, orderBy: String) on OBJECT | UNION
directive @goField(forceResolver: Boolean, name: String) on INPUT_FIELD_DEFINITION | FIELD_DEFINITION
directive @goModel(model: String, models: [String!]) on OBJECT | INPUT_OBJECT | SCALAR | ENUM | INTERFACE | UNION
directive @jsonpath(name: String, depends: [String]) on INPUT_FIELD_DEFINITION | FIELD_DEFINITION
directive @relation(name: String!, fkName: [String!]!, relationFkName: [String!]!, relType: RelationType!, manyToManyTableName: String, joinOn: [String!]) on FIELD_DEFINITION
directive @sqlgen(skip: Boolean!) on FIELD_DEFINITION
directive @viewFunction(name: String, arguments: [String]) on FIELD_DEFINITION
enum AccessType {
	ALLOW
	DENY
}
"""
Enum filter expression for AccessType
"""
input AccessTypeComparator {
	"""
	eq comparison operator
	"""
	eq: AccessType
	"""
	neq comparison operator
	"""
	neq: AccessType
	"""
	in comparison operator
	"""
	in: [AccessType]
	"""
	not_in comparison operator
	"""
	not_in: [AccessType]
}
type ActiveDirectoryData {
	"""
	AD Common Name (CN)
	"""
	adCn: String
	"""
	AD objectSid
	"""
	adSid: String
	"""
	AD objectGUID
	"""
	adGuid: String
	"""
	AD name
	"""
	adName: String
	"""
	AD SAMAccountName
	"""
	adSAMAccountName: String
	"""
	AD User Principal Name
	"""
	adUserPrincipalName: String
	"""
	AD displayName
	"""
	adDisplayName: String
	"""
	AD distinguishedName
	"""
	adDistinguishedName: String
	"""
	AD canonicalName
	"""
	adCanonicalName: String
	"""
	AD accountExpires
	"""
	adAccountExpires: Epoch
	"""
	AD objectClass
	"""
	adObjectClass: [String]
	"""
	AD objectCategory
	"""
	adObjectCategory: String
	"""
	AD Organizational Unit
	"""
	adOrganizationalUnit: [String]
	"""
	AD lastLogoff
	"""
	adLastLogoff: Time
	"""
	AD lastLogon
	"""
	adLastLogon: Time
	"""
	AD lastLogonTimestamp
	"""
	adLastLogonTimestamp: Time
	"""
	AD badPasswordTime
	"""
	adBadPasswordTime: Time
	"""
	AD badPwdCount
	"""
	ad_bad_pwd_count: Int
	"""
	AD managedBy
	"""
	adManagedBy: String
	"""
	AD pwdLastSet
	"""
	adPasswordLastSet: Time
	"""
	AD Primary group ID
	"""
	adPrimaryGroupId: Int
	"""
	AD Primary group ID
	"""
	adPrimaryGroupDn: String
	"""
	AD memberOf
	"""
	adMemberOf: [String]
	"""
	AD memberOf (nested full list)
	"""
	adMemberOfFull: [String]
	"""
	AD uSNChanged
	"""
	adUsnChanged: Int
	"""
	AD uSNCreated
	"""
	adUsnCreated: Int
	"""
	AD whenChanged
	"""
	adWhenChanged: Time
	"""
	AD whenCreated
	"""
	adWhenCreated: Time
	"""
	AD isCriticalSystemObject
	"""
	adIsCriticalSystemObject: Boolean
	"""
	AD msDS-AllowedToDelegateTo
	"""
	adMsdsAllowedToDelegateTo: [String]
	"""
	AD Password Must Change
	"""
	adPwdMustChange: Boolean
	"""
	AD Resultant Password Settings Object
	"""
	adMsdsResultantPso: String
}
type Adapter @generateInputs(where: "adapter_bool_exp", orderBy: "adapter_order_by") {
	id: AdapterType!
	name: String
	properties: [String]
}
union AdapterData @generateInputs(where: "adapter_data_bool_exp", orderBy: "adapter_data_order_by") = ActiveDirectoryData | CylanceData | CrowdStrikeData
"""
Adapter device is a single enitity returned from that adapter
"""
type AdapterDevice @generateInputs(where: "adapter_device_bool_exp", orderBy: "adapter_device_order_by") {
	"""
	Unique id of adapter device
	"""
	id: UUID!
	"""
	Cycle adapter device was fetched
	"""
	fetchCycle: Int!
	"""
	Idadas of adapter that fetched this device
	"""
	adapterId: AdapterType!
	adapter("""
	filter the rows returned
	"""
	where: adapter_bool_exp): Adapter @relation(name: "adapters", fkName: ["adapterId"], relationFkName: ["id"], relType: ONE_TO_ONE)
	"""
	Name of adapter that fetched this advice
	"""
	adapterName: String
	"""
	Correlated device id
	"""
	deviceId: UUID!
	"""
	Unique data returned by adapter on this device
	"""
	adapterData("""
	filter the rows returned
	"""
	where: adapter_data_bool_exp): AdapterData @jsonpath(name: "data", depends: ["adapterId"]) @goField(forceResolver: true, name: "adapterData")
	"""
	Data returned by this adapter as a json mappping
	"""
	data: Map
	"""
	Time adapter was requested to fetch device by axonius
	"""
	fetchTime: Epoch
	"""
	hostname of device
	"""
	hostname: String
	"""
	name given to device by the adapter
	"""
	name: String
	"""
	Last time device was seen by adapter in Unix time
	"""
	lastSeen: Epoch
	osId: UUID!
	"""
	Operating system adapter device is running on
	"""
	os("""
	filter the rows returned
	"""
	where: operating_system_bool_exp): OperatingSystem @relation(name: "operating_systems", fkName: ["osId"], relationFkName: ["id"], relType: ONE_TO_ONE)
	"""
	Pertty id given to adapter device when axonius created it
	"""
	prettyId: String
	tags("""
	limit the number of rows returned.
	"""
	limit: Int = 100, """
	skip the first n rows.
	"""
	offset: Int = 0, """
	filter the rows returned
	"""
	where: tag_bool_exp): [Tag] @relation(name: "adapter_device_tags", fkName: ["id"], relationFkName: ["adapter_device_id"], relType: MANY_TO_MANY, manyToManyTableName: "tags", joinOn: ["name"])
	interfaces("""
	limit the number of rows returned.
	"""
	limit: Int = 100, """
	skip the first n rows.
	"""
	offset: Int = 0, """
	filter the rows returned
	"""
	where: network_interface_bool_exp): [NetworkInterface!] @relation(name: "network_interfaces", fkName: ["id","fetch_cycle"], relationFkName: ["deviceId","fetch_cycle"], relType: ONE_TO_MANY)
	"""
	List of uses who last used the device
	"""
	lastUsedUsers: [String]
	"""
	Name of domain this adapter device belongs too
	"""
	domain: String
	"""
	Whether this adapter device is part of the domain
	"""
	partOfDomain: Boolean
	"""
	Users known by this device
	"""
	deviceUsers("""
	limit the number of rows returned.
	"""
	limit: Int = 100, """
	skip the first n rows.
	"""
	offset: Int = 0, """
	filter the rows returned
	"""
	where: adapter_device_user_bool_exp): [AdapterDeviceUser] @jsonpath(name: "deviceUsers")
	"""
	local admins known by this device
	"""
	localAdmins("""
	limit the number of rows returned.
	"""
	limit: Int = 100, """
	skip the first n rows.
	"""
	offset: Int = 0, """
	filter the rows returned
	"""
	where: adapter_device_admin_bool_exp): [AdapterDeviceAdmin] @jsonpath(name: "localAdmins")
	"""
	Firewall rules defined on this adapter device
	"""
	firewallRules("""
	limit the number of rows returned.
	"""
	limit: Int = 100, """
	skip the first n rows.
	"""
	offset: Int = 0, """
	filter the rows returned
	"""
	where: firewall_rule_bool_exp): [FirewallRule] @relation(name: "adapter_device_firewall_rules", fkName: ["id","fetch_cycle"], relationFkName: ["adapter_device_id","fetch_cycle"], relType: MANY_TO_MANY, manyToManyTableName: "firewall_rules", joinOn: ["name"])
	"""
	Software installed on this device
	"""
	installedSoftware("""
	limit the number of rows returned.
	"""
	limit: Int = 100, """
	skip the first n rows.
	"""
	offset: Int = 0, """
	filter the rows returned
	"""
	where: installed_software_bool_exp): [InstalledSoftware] @relation(name: "adapter_device_installed_software", fkName: ["id","fetch_cycle"], relationFkName: ["adapter_device_id","fetch_cycle"], relType: MANY_TO_MANY, manyToManyTableName: "installed_software", joinOn: ["name","version"])
	agentVersion: String
	agentStatus: String
	agentName: String
	model: String
	manufacturer: String
	serial: String
	family: String
	biosVersion: String
	biosSerial: String
	"""
	Returns aggregate of tags
	"""
	tags_aggregate("""
	group by columns
	"""
	groupBy: [tags_aggregate_columns!], """
	distinct on columns
	"""
	distinctOn: [tags_aggregate_columns!], """
	order by aggregation columns
	"""
	orderBy: [AggregateOrdering!], """
	limit the number of rows returned.
	"""
	limit: Int = 100, """
	skip the first n rows.
	"""
	offset: Int = 0, """
	filter the rows returned
	"""
	where: tag_bool_exp): [tagsAggregate!] @relation(name: "adapter_device_tags", fkName: ["id"], relationFkName: ["adapter_device_id"], relType: MANY_TO_MANY, manyToManyTableName: "tags", joinOn: ["name"])
	"""
	Returns aggregate of interfaces
	"""
	interfaces_aggregate("""
	group by columns
	"""
	groupBy: [interfaces_aggregate_columns!], """
	distinct on columns
	"""
	distinctOn: [interfaces_aggregate_columns!], """
	order by aggregation columns
	"""
	orderBy: [AggregateOrdering!], """
	limit the number of rows returned.
	"""
	limit: Int = 100, """
	skip the first n rows.
	"""
	offset: Int = 0, """
	filter the rows returned
	"""
	where: network_interface_bool_exp): [interfacesAggregate!] @relation(name: "network_interfaces", fkName: ["id","fetch_cycle"], relationFkName: ["deviceId","fetch_cycle"], relType: ONE_TO_MANY)
	"""
	Returns aggregate of firewallRules
	"""
	firewallRules_aggregate("""
	group by columns
	"""
	groupBy: [firewallRules_aggregate_columns!], """
	distinct on columns
	"""
	distinctOn: [firewallRules_aggregate_columns!], """
	order by aggregation columns
	"""
	orderBy: [AggregateOrdering!], """
	limit the number of rows returned.
	"""
	limit: Int = 100, """
	skip the first n rows.
	"""
	offset: Int = 0, """
	filter the rows returned
	"""
	where: firewall_rule_bool_exp): [firewallRulesAggregate!] @relation(name: "adapter_device_firewall_rules", fkName: ["id","fetch_cycle"], relationFkName: ["adapter_device_id","fetch_cycle"], relType: MANY_TO_MANY, manyToManyTableName: "firewall_rules", joinOn: ["name"])
	"""
	Returns aggregate of installedSoftware
	"""
	installedSoftware_aggregate("""
	group by columns
	"""
	groupBy: [installedSoftware_aggregate_columns!], """
	distinct on columns
	"""
	distinctOn: [installedSoftware_aggregate_columns!], """
	order by aggregation columns
	"""
	orderBy: [AggregateOrdering!], """
	limit the number of rows returned.
	"""
	limit: Int = 100, """
	skip the first n rows.
	"""
	offset: Int = 0, """
	filter the rows returned
	"""
	where: installed_software_bool_exp): [installedSoftwareAggregate!] @relation(name: "adapter_device_installed_software", fkName: ["id","fetch_cycle"], relationFkName: ["adapter_device_id","fetch_cycle"], relType: MANY_TO_MANY, manyToManyTableName: "installed_software", joinOn: ["name","version"])
}
type AdapterDeviceAdmin @generateInputs(where: "adapter_device_admin_bool_exp", orderBy: "adapter_device_admin_order_by") {
	name: String
	type: AdminType
}
"""
User known by an adapter device
"""
type AdapterDeviceUser @generateInputs(where: "adapter_device_user_bool_exp", orderBy: "adapter_device_user_order_by") {
	deviceId: UUID
	sid: String
	username: String
	lastUseDate: Epoch
	isLocal: Boolean
	isDisabled: Boolean
	isAdmin: Boolean
	userDepartment: Boolean
	passwordMaxAge: Int
	interpreter: String
}
enum AdapterType @goModel(model: "bandicoot/pkg/domain.AdapterType") {
	UNKNOWN
	CUSTOM
	ABSOLUTE
	ACTIVE_DIRECTORY
	AIRWATCH
	AIRWAVE
	ALERTLOGIC
	ALIBABA
	ANSIBLE_TOWER
	AQUA
	ARISTA_EOS
	ARMIS
	ARSENAL
	ARUBA
	AUTOMOX
	AWS
	AZURE_AD
	AZURE
	BAMBOOHR
	BIGFIX
	BIGFIX_INVENTORY
	BITDEFENDER
	BITLOCKER
	BITSIGHT
	BLACKBERRY_UEM
	BLUECAT
	BOMGAR
	CA_CMDB
	CA_SPECTRUM
	CARBONBLACK_DEFENSE
	CARBONBLACK_RESPONSE
	CENSYS
	CHECKPOINTR90
	CHEF
	CHERWELL
	CISCO
	CISCO_AMP
	CISCO_FIREPOWER_MANAGEMENT_CENTER
	CISCO_ISE
	CISCO_MERAKI
	CISCO_PRIME
	CISCO_STEALTHWATCH
	CISCO_UCM
	CISCO_UCSM
	CISCO_UMBERELLA
	CLAROTY
	CLEARPASS
	CLOUDFLARE
	CLOUD_PASSAGE
	CODE42
	COUNTER_ACT
	CROWD_STRIKE
	CSC_GLOBAL
	CSV
	CYBEREASON
	CYCOGNITO
	CYLANCE
	CYNET
	DATADOG
	DATTO
	DEEP_SECURITY
	DEFENDER_ATP
	DESKTOP_CENTRAL
	DEVICE42
	DIGICERT_CERTCENTRAL
	DIVVY_CLOUD
	DROPBOX
	DRUVA
	DUO
	DYNATRACE
	ECLYPSIUM
	EDGESSCAN
	ENDGAME
	ENSILO
	EPO
	ESET
	ESX
	F5_ICONTROL
	FIRE_EYE_HX
	FORCEPOINT
	FOREMAN
	FORTIGATE
	FRESH_SERVICE
	GCE
	GITHUB
	GOOGLE_BIG_QUERY
	GOOGLE_MDM
	GOTOASSIST
	GURDICORE
	GUARDIUM
	HASHICORP
	HAVEIBEENPWNED
	HP_NNMI
	HYPER_V
	IBM_TIVOLI_TADDM
	ICINGA
	IGAR
	ILLUSIVE
	IMPERVA
	INDEGY
	INFINITE_SLEEP
	INFOBLOX
	IVANTI_SM
	JAMF
	JSON
	JSON_FILE
	JUMPCLOUD
	JUNIPER
	JUNOS
	KASEYA
	KASPERSKY_SC
	LANDESK
	LANSWEEPER
	LIBERNMS
	LINUX_SSH
	LOGRYTHM
	MAAS360
	MALWAREBYTES
	MASSCAN
	MEDIGATE
	MEN_AND_MICE
	MINERVA
	MOBI_CONTROL
	MOBILE_IRON
	MSSQL
	NESSUS
	NESSUS_CSV
	NETBOX
	NETBRAIN
	NETSKOPE
	NEXPOSE
	NIMBUL
	NMAP
	NUTANIX
	OBSERVEIT
	OBSERVIUM
	OFFICE_SCAN
	OKTA
	OMNIVISTA
	OPENSTACK
	OPSWAT
	ORACLE_CLOUD
	ORACLE_VM
	ORCA
	PACKETFENCE
	PALOALTO_CORTEX
	PALOALTO_PANORAMA
	PALOALTO_XDR
	PKWARE
	PREEMPT
	PROMISEC
	PROXMOX
	PUPPET
	QCORE
	QUALYS
	QUEST_KACE
	RANDORI
	REDCANARY
	REDCLOAK
	REDSEAL
	RISK_IQ
	RIVERBED
	RUMBLE
	SALTSTACK
	SALTSTACK_ENTERPRISE
	SAMANGE
	SCCM
	SCEP
	SECDO
	SENTINELONE
	SERVICENOW
	SHOADAN
	SIGNALSCIENCES
	SKYBOX
	SNIPEIT
	SNOW
	SOFTLAYER
	SOLARWINDS_ORION
	SOPHOS
	SPACEWALK
	SPECOPS
	SPLUNK
	STRESSTEST
	SYMANTEC
	SYMANTEC_ALTIRIS
	SYMANTEC_CCS
	SYMANTEC_CLOUD_WORKLOAD
	SYMANTEC_DLP
	SYMANTEC_SEP_CLOUD
	SYSAID
	TANIUM
	TENABLE_IO
	TENABLE_SECURITY_CENTER
	TORIIHQ
	TRAIANA_LAB_MACHINES
	TRIPWIRE_ENTERPRISE
	TRUEFORT
	TWISTLOCK
	UNIFI
	VCLOUD_DIRECTOR
	WAZUH
	WEBROOT
	WEBSCAN
	WSUS
	ZABBIX
	ZSCALER
}
"""
Enum filter expression for AdapterType
"""
input AdapterTypeComparator {
	"""
	eq comparison operator
	"""
	eq: AdapterType
	"""
	neq comparison operator
	"""
	neq: AdapterType
	"""
	in comparison operator
	"""
	in: [AdapterType]
	"""
	not_in comparison operator
	"""
	not_in: [AdapterType]
}
type AdapterUser @generateInputs(where: "adapter_user_bool_exp", orderBy: "adapter_user_order_by") {
	"""
	Unique id of adapter device
	"""
	id: UUID!
	"""
	Cycle adapter device was fetched
	"""
	fetchCycle: Int!
	"""
	Id of adapter that fetched this device
	"""
	adapterId: AdapterType!
	adapter("""
	filter the rows returned
	"""
	where: adapter_bool_exp): Adapter @relation(name: "adapters", fkName: ["adapterId"], relationFkName: ["id"], relType: ONE_TO_ONE)
	"""
	Name of adapter that fetched this advice
	"""
	adapterName: String
	"""
	Correlated device id
	"""
	userId: UUID!
	"""
	Unique data returned by adapter on this device
	"""
	adapterData("""
	filter the rows returned
	"""
	where: adapter_data_bool_exp): AdapterData @jsonpath(name: "data", depends: ["adapterId"]) @goField(forceResolver: true, name: "adapterData")
	"""
	Data returned by this adapter as a json mappping
	"""
	data: Map
	"""
	Time adapter was requested to fetch device by axonius
	"""
	fetchTime: Epoch
	"""
	Last time device was seen by adapter in Unix time
	"""
	lastSeen: Epoch
	"""
	Username
	"""
	username: String
	"""
	User first name
	"""
	firstName: String
	"""
	User last name
	"""
	lastName: String
	"""
	User email account
	"""
	mail: String
	"""
	User account has admin privileges
	"""
	admin: Boolean
	"""
	User entity is local 
	"""
	local: Boolean
	"""
	User account is a delegated admin
	"""
	delegated_admin: Boolean
	"""
	User account has multi-factor authentication enforced
	"""
	mfa_enforced: Boolean
	"""
	User account is enrollled in multi-factor authenticaton
	"""
	mfa_enrolled: Boolean
	"""
	User account is suspended
	"""
	suspended: Boolean
	"""
	User account has been locked
	"""
	locked: Boolean
	"""
	User account has been disabled
	"""
	disabled: Boolean
}
enum AdminType {
	ADMIN_USER
	GROUP_MEMBERSHIP
}
"""
Enum filter expression for AdminType
"""
input AdminTypeComparator {
	"""
	eq comparison operator
	"""
	eq: AdminType
	"""
	neq comparison operator
	"""
	neq: AdminType
	"""
	in comparison operator
	"""
	in: [AdminType]
	"""
	not_in comparison operator
	"""
	not_in: [AdminType]
}
interface Aggregate {
	group: [String!]!
	distinct: [String!]!
	count: Int
	sum: Map
	avg: Map
	min: Map
	max: Map
}
enum AggregateOrdering {
	count_ASC
	count_DESC
	sum_ASC
	sum_DESC
	avg_ASC
	avg_DESC
	min_ASC
	min_DESC
	max_ASC
	max_DESC
}
scalar Any
enum Architecture {
	X86
	X64
	MIPS
	ALPHA
	ARM
	POWER_PC
	IA64
}
"""
Enum filter expression for Architecture
"""
input ArchitectureComparator {
	"""
	eq comparison operator
	"""
	eq: Architecture
	"""
	neq comparison operator
	"""
	neq: Architecture
	"""
	in comparison operator
	"""
	in: [Architecture]
	"""
	not_in comparison operator
	"""
	not_in: [Architecture]
}
input BooleanComparator {
	exists: Boolean
	eq: Boolean
	neq: Boolean
}
"""
IPv4 and IPv6 networks
"""
scalar CIDR
type CPU {
	id: Int!
	name: String!
	manfacturer: String
	bitness: Int
	family: String
	"""
	Core count of CPU
	"""
	cores: Int
	coresThreads: Int
	ghz: Float
}
type CrowdStrikeData {
	externalIp: String
	groups("""
	limit the number of rows returned.
	"""
	limit: Int = 100, """
	skip the first n rows.
	"""
	offset: Int = 0, """
	filter the rows returned
	"""
	where: cs_group_bool_exp): [csGroup]
	preventionPolicy("""
	filter the rows returned
	"""
	where: cs_policy_bool_exp): csPolicy
	sensorUpdatePolicy("""
	filter the rows returned
	"""
	where: cs_group_bool_exp): csGroup
	csAgentVersion: String
	"""
	Returns aggregate of groups
	"""
	groups_aggregate("""
	group by columns
	"""
	groupBy: [groups_aggregate_columns!], """
	distinct on columns
	"""
	distinctOn: [groups_aggregate_columns!], """
	order by aggregation columns
	"""
	orderBy: [AggregateOrdering!], """
	limit the number of rows returned.
	"""
	limit: Int = 100, """
	skip the first n rows.
	"""
	offset: Int = 0, """
	filter the rows returned
	"""
	where: cs_group_bool_exp): [groupsAggregate!]
}
type CylanceData {
	isSafe: String
	deviceState: CylanceDeviceState
	policyId: String
	policyName: String
	policiesDetails: [String]
	tenantTag: String
	zoneNames: [String]
	agentVersion: String
}
enum CylanceDeviceState {
	ONLINE
	OFFLINE
}
"""
Enum filter expression for CylanceDeviceState
"""
input CylanceDeviceStateComparator {
	"""
	eq comparison operator
	"""
	eq: CylanceDeviceState
	"""
	neq comparison operator
	"""
	neq: CylanceDeviceState
	"""
	in comparison operator
	"""
	in: [CylanceDeviceState]
	"""
	not_in comparison operator
	"""
	not_in: [CylanceDeviceState]
}
"""
Device aggregates one or more adapter device that were correlated
"""
type Device @generateInputs(where: "device_bool_exp", orderBy: "device_order_by") {
	"""
	Unique ID of correlated device
	"""
	id: UUID!
	"""
	Fetch cycle this device was collected
	"""
	fetchCycle: Int!
	"""
	Count of adapters that are correlated to this device
	"""
	adapterCount: Int!
	"""
	Names of adapters that are correlated to this device
	"""
	adapterNames: [String!]
	"""
	Unique hostnames given to device by all adapters
	"""
	hostnames: [String!]
	"""
	Last time device was seen by one of the adapters
	"""
	lastSeen: Epoch
	"""
	Adapter devices that are correlated to this device
	"""
	adapterDevices("""
	limit the number of rows returned.
	"""
	limit: Int = 100, """
	skip the first n rows.
	"""
	offset: Int = 0, """
	filter the rows returned
	"""
	where: adapter_device_bool_exp): [AdapterDevice!] @relation(name: "adapter_devices", fkName: ["id","fetch_cycle"], relationFkName: ["device_id","fetch_cycle"], relType: ONE_TO_MANY)
	"""
	Unique set of network interfaces collected by all adapter devices
	"""
	interfaces("""
	limit the number of rows returned.
	"""
	limit: Int = 100, """
	skip the first n rows.
	"""
	offset: Int = 0, """
	filter the rows returned
	"""
	where: network_interface_bool_exp): [NetworkInterface!] @viewFunction(name: "device_network_interfaces", arguments: ["id","fetch_cycle"])
	"""
	Unique set tags given to all adapter devices
	"""
	tags("""
	limit the number of rows returned.
	"""
	limit: Int = 100, """
	skip the first n rows.
	"""
	offset: Int = 0, """
	filter the rows returned
	"""
	where: tag_bool_exp): [Tag!] @viewFunction(name: "device_tags", arguments: ["id","fetch_cycle"])
	"""
	Allows transformation of queried data to API v1
	"""
	_compatibilityAPI: Map @goField(forceResolver: true, name: "compatabilityAPI") @deprecated
	"""
	Returns aggregate of adapterDevices
	"""
	adapterDevices_aggregate("""
	group by columns
	"""
	groupBy: [adapterDevices_aggregate_columns!], """
	distinct on columns
	"""
	distinctOn: [adapterDevices_aggregate_columns!], """
	order by aggregation columns
	"""
	orderBy: [AggregateOrdering!], """
	limit the number of rows returned.
	"""
	limit: Int = 100, """
	skip the first n rows.
	"""
	offset: Int = 0, """
	filter the rows returned
	"""
	where: adapter_device_bool_exp): [adapterDevicesAggregate!] @relation(name: "adapter_devices", fkName: ["id","fetch_cycle"], relationFkName: ["device_id","fetch_cycle"], relType: ONE_TO_MANY)
	"""
	Returns aggregate of interfaces
	"""
	interfaces_aggregate("""
	group by columns
	"""
	groupBy: [interfaces_aggregate_columns!], """
	distinct on columns
	"""
	distinctOn: [interfaces_aggregate_columns!], """
	order by aggregation columns
	"""
	orderBy: [AggregateOrdering!], """
	limit the number of rows returned.
	"""
	limit: Int = 100, """
	skip the first n rows.
	"""
	offset: Int = 0, """
	filter the rows returned
	"""
	where: network_interface_bool_exp): [interfacesAggregate!] @viewFunction(name: "device_network_interfaces", arguments: ["id","fetch_cycle"])
	"""
	Returns aggregate of tags
	"""
	tags_aggregate("""
	group by columns
	"""
	groupBy: [tags_aggregate_columns!], """
	distinct on columns
	"""
	distinctOn: [tags_aggregate_columns!], """
	order by aggregation columns
	"""
	orderBy: [AggregateOrdering!], """
	limit the number of rows returned.
	"""
	limit: Int = 100, """
	skip the first n rows.
	"""
	offset: Int = 0, """
	filter the rows returned
	"""
	where: tag_bool_exp): [tagsAggregate!] @viewFunction(name: "device_tags", arguments: ["id","fetch_cycle"])
}
enum Direction {
	INGRESS
	EGRESS
}
"""
Enum filter expression for Direction
"""
input DirectionComparator {
	"""
	eq comparison operator
	"""
	eq: Direction
	"""
	neq comparison operator
	"""
	neq: Direction
	"""
	in comparison operator
	"""
	in: [Direction]
	"""
	not_in comparison operator
	"""
	not_in: [Direction]
}
"""
Unix Time (also known as Epoch time) is a system for describing a point in time.
It is the number of seconds that have elapsed since the Unix epoch, that is the time 00:00:00 UTC on 1 January 1970,
minus leap seconds.
"""
scalar Epoch
input EpochArrayComparator {
	exists: Boolean
	eq: [Epoch]
	neq: [Epoch]
}
input EpochComparator {
	exists: Boolean
	eq: Epoch
	neq: Epoch
	lte: Epoch
	lt: Epoch
	gte: Epoch
	gt: Epoch
	days: Int
}
interface Filter {
	name: String!
	description: String
	type: String!
	displayName: String!
}
type FirewallRule @generateInputs(where: "firewall_rule_bool_exp", orderBy: "firewall_rule_order_by") {
	name: String
	source: String
	type: AccessType
	direction: Direction
	target: String
	protocol: String
	srcPort: Int
	dstPort: Int
}
input FloatArrayComparator {
	exists: Boolean
	eq: [Float]
	neq: [Float]
	contains: [Float]
	contained_by: [Float]
	overlap: [Float]
	size: Int
}
input FloatComparator {
	exists: Boolean
	eq: Float
	neq: Float
	lte: Float
	lt: Float
	gte: Float
	gt: Float
}
type GCETagsAggregate {
	group: [String!]!
	distinct: [String!]!
	count: Int
	sum: Map
	avg: Map
	min("""
	Aggregate functions compute a single result value from a set of input values
	"""
	column: [GCETags_aggregate_min_columns!]!): Map
	max("""
	Aggregate functions compute a single result value from a set of input values
	"""
	column: [GCETags_aggregate_max_columns!]!): Map
	GCETags("""
	limit the number of rows returned.
	"""
	limit: Int = 100, """
	skip the first n rows.
	"""
	offset: Int = 0, """
	filter the rows returned
	"""
	where: gce_tags_bool_exp): [GceTags]
}
enum GCETags_aggregate_columns {
	"""
	groupBy by gceKey
	"""
	gceKey
	"""
	groupBy by gceValue
	"""
	gceValue
}
enum GCETags_aggregate_max_columns {
	"""
	max by gceKey
	"""
	gceKey
	"""
	max by gceValue
	"""
	gceValue
}
enum GCETags_aggregate_min_columns {
	"""
	min by gceKey
	"""
	gceKey
	"""
	min by gceValue
	"""
	gceValue
}
type GceTags @generateInputs(where: "gce_tags_bool_exp", orderBy: "gce_tags_order_by") {
	gceKey: String
	gceValue: String
}
type GoogleCloudData {
	Id: String
	Size: String
	Image: String
	GCETags("""
	limit the number of rows returned.
	"""
	limit: Int = 100, """
	skip the first n rows.
	"""
	offset: Int = 0, """
	filter the rows returned
	"""
	where: gce_tags_bool_exp): [GceTags]
	"""
	Returns aggregate of GCETags
	"""
	GCETags_aggregate("""
	group by columns
	"""
	groupBy: [GCETags_aggregate_columns!], """
	distinct on columns
	"""
	distinctOn: [GCETags_aggregate_columns!], """
	order by aggregation columns
	"""
	orderBy: [AggregateOrdering!], """
	limit the number of rows returned.
	"""
	limit: Int = 100, """
	skip the first n rows.
	"""
	offset: Int = 0, """
	filter the rows returned
	"""
	where: gce_tags_bool_exp): [GCETagsAggregate!]
}
scalar IP
input IPArrayComparator {
	exists: Boolean
	eq: [IP]
	neq: [IP]
	contains: [IP]
	contained_by: [IP]
	overlap: [IP]
	size: Int
	in_subnet: CIDR
	ip_family: IPFamily
}
input IPComparator {
	exists: Boolean
	eq: IP
	neq: IP
}
enum IPFamily {
	V4
	V6
}
type InstalledSoftware @generateInputs(where: "installed_software_bool_exp", orderBy: "installed_software_order_by") {
	"""
	Software Name
	"""
	name: String
	"""
	Software Version
	"""
	version: String
	architecture: Architecture
	description: String
	"""
	Software Vendor
	"""
	vendor: String
	publisher: String
	cveCount: Int
	swLicense: String
	path: String
}
input IntArrayComparator {
	exists: Boolean
	eq: [Int]
	neq: [Int]
	contains: [Int]
	contained_by: [Int]
	overlap: [Int]
	size: Int
}
input IntComparator {
	exists: Boolean
	eq: Int
	neq: Int
	lte: Int
	lt: Int
	gte: Int
	gt: Int
	in: [Int]
	not_in: [Int]
}
"""
A media access control address (MAC address) is a unique identifier assigned to a network interface controller (NIC)
for use as a network address in communications within a network segment.
"""
scalar Mac
input MacArrayComparator {
	exists: Boolean
	eq: [Mac]
	neq: [Mac]
	contains: [Mac]
	contained_by: [Mac]
	overlap: [Mac]
	size: Mac
}
input MacComparator {
	exists: Boolean
	eq: Mac
	neq: Mac
}
"""
JavaScript Object Notation (JSON) is an open-standard file format or data interchange format
that uses human-readable text to transmit data objects consisting of attribute–value pairs and array data types
(or any other serializable value)
"""
scalar Map
"""
Network interface is a system's interface between two pieces of equipment or protocol layers in a computer network.
"""
type NetworkInterface @generateInputs(where: "network_interface_bool_exp", orderBy: "networkInterface_order_by") {
	deviceId: UUID
	macAddr: Mac
	ipAddrs: [IP!]
}
type ObjectFilter implements Filter {
	name: String!
	displayName: String!
	type: String!
	description: String
	filters: [Filter] @sqlgen(skip: true)
}
"""
Operating System is the system installed on an adapter device
"""
type OperatingSystem @generateInputs(where: "operating_system_bool_exp", orderBy: "operating_system_order_by") {
	id: UUID!
	type: String
	distribution: String
	architecture: Int
	servicePack: String
	installDate: Epoch
	kernelVersion: String
	codeName: String
	major: Int
	minor: Int
	build: String
	RawName: String
}
type Operator implements Filter {
	name: String!
	type: String!
	displayName: String!
	description: String
	formatDisplay: String
}
enum OsTypes {
	WINDOWS
	LINUX
	OS_X
	IOS
	AIR_OS
	ANDROID
	FREE_BSD
	VMWARE
	CISCO
	MIKROTIK
	VXWORKS
	F5_NETWORKS_BIG_IP
	SOLARIS
	AIX
	PRINTER
	PLAYSTATION
	CHECKPOINT
	ARISTA
}
type Query {
	adapterDevices("""
	limit the number of rows returned.
	"""
	limit: Int = 100, """
	skip the first n rows.
	"""
	offset: Int = 0, """
	filter the rows returned
	"""
	where: adapter_device_bool_exp, """
	sort the rows by one or more columns
	"""
	orderBy: [adapter_device_order_by!]): [AdapterDevice!]!
	devices("""
	limit the number of rows returned.
	"""
	limit: Int = 100, """
	skip the first n rows.
	"""
	offset: Int = 0, """
	filter the rows returned
	"""
	where: device_bool_exp, """
	sort the rows by one or more columns
	"""
	orderBy: [device_order_by!]): [Device!]!
	adapterUsers("""
	limit the number of rows returned.
	"""
	limit: Int = 100, """
	skip the first n rows.
	"""
	offset: Int = 0, """
	filter the rows returned
	"""
	where: adapter_user_bool_exp, """
	sort the rows by one or more columns
	"""
	orderBy: [adapter_user_order_by!]): [AdapterUser!]!
	users("""
	limit the number of rows returned.
	"""
	limit: Int = 100, """
	skip the first n rows.
	"""
	offset: Int = 0, """
	filter the rows returned
	"""
	where: user_bool_exp, """
	sort the rows by one or more columns
	"""
	orderBy: [user_order_by!]): [User!]!
	_wizardFilters(type: String!): ObjectFilter @sqlgen(skip: true)
	"""
	Returns aggregate of adapterDevices
	"""
	adapterDevices_aggregate("""
	group by columns
	"""
	groupBy: [adapterDevices_aggregate_columns!], """
	distinct on columns
	"""
	distinctOn: [adapterDevices_aggregate_columns!], """
	order by aggregation columns
	"""
	orderBy: [AggregateOrdering!], """
	limit the number of rows returned.
	"""
	limit: Int = 100, """
	skip the first n rows.
	"""
	offset: Int = 0, """
	filter the rows returned
	"""
	where: adapter_device_bool_exp): [adapterDevicesAggregate!]
	"""
	Returns aggregate of devices
	"""
	devices_aggregate("""
	group by columns
	"""
	groupBy: [devices_aggregate_columns!], """
	distinct on columns
	"""
	distinctOn: [devices_aggregate_columns!], """
	order by aggregation columns
	"""
	orderBy: [AggregateOrdering!], """
	limit the number of rows returned.
	"""
	limit: Int = 100, """
	skip the first n rows.
	"""
	offset: Int = 0, """
	filter the rows returned
	"""
	where: device_bool_exp): [devicesAggregate!]
	"""
	Returns aggregate of adapterUsers
	"""
	adapterUsers_aggregate("""
	group by columns
	"""
	groupBy: [adapterUsers_aggregate_columns!], """
	distinct on columns
	"""
	distinctOn: [adapterUsers_aggregate_columns!], """
	order by aggregation columns
	"""
	orderBy: [AggregateOrdering!], """
	limit the number of rows returned.
	"""
	limit: Int = 100, """
	skip the first n rows.
	"""
	offset: Int = 0, """
	filter the rows returned
	"""
	where: adapter_user_bool_exp): [adapterUsersAggregate!]
	"""
	Returns aggregate of users
	"""
	users_aggregate("""
	group by columns
	"""
	groupBy: [users_aggregate_columns!], """
	distinct on columns
	"""
	distinctOn: [users_aggregate_columns!], """
	order by aggregation columns
	"""
	orderBy: [AggregateOrdering!], """
	limit the number of rows returned.
	"""
	limit: Int = 100, """
	skip the first n rows.
	"""
	offset: Int = 0, """
	filter the rows returned
	"""
	where: user_bool_exp): [usersAggregate!]
}
enum RelationType {
	ONE_TO_ONE
	ONE_TO_MANY
	MANY_TO_MANY
}
type ScalarFilter implements Filter {
	name: String!
	displayName: String!
	description: String
	type: String!
	operators: [Operator]! @sqlgen(skip: true)
}
type Storage {
	deviceId: UUID!
	"""
	Path
	"""
	path: String!
	"""
	Device Name
	"""
	name: String!
	"""
	Size (GB)
	"""
	totalSize: Float!
	"""
	Size (GB)
	"""
	freeSize: Float!
	"""
	Whether drive is encrypted or not
	"""
	isEncrypted: Boolean!
	"""
	Descirption of device
	"""
	description: String
}
input StringArrayComparator {
	exists: Boolean
	eq: [String]
	neq: [String]
	contains: [String]
	contained_by: [String]
	overlap: [String]
	no_overlap: [String]
	size: Int
	contains_regex: String
}
input StringComparator {
	exists: Boolean
	eq: String
	neq: String
	in: [String]
	not_in: [String]
	like: String
	ilike: String
	not_like: String
	not_ilike: String
	suffix: String
	prefix: String
}
type Tag @generateInputs(where: "tag_bool_exp", orderBy: "tag_order_by") {
	name: String!
	creator: String!
	level: String!
}
scalar Time
scalar UUID
input UUIDArrayComparator {
	exists: Boolean
	eq: [UUID]
	neq: [UUID]
	contains: [UUID]
	contained_by: [UUID]
	overlap: [UUID]
	size: Int
}
input UUIDComparator {
	exists: Boolean
	eq: UUID
	neq: UUID
	in: [UUID]
	not_in: [UUID]
}
type UnionFilter implements Filter {
	name: String!
	displayName: String!
	type: String!
	description: String
	objects: [ObjectFilter] @sqlgen(skip: true)
}
type User @generateInputs(where: "user_bool_exp", orderBy: "user_order_by") {
	id: UUID!
	fetchCycle: Int!
	adapterCount: Int!
	adapterNames: [String!]
	usernames: [String!]
	lastSeen: Epoch
	adapterUsers("""
	limit the number of rows returned.
	"""
	limit: Int = 100, """
	skip the first n rows.
	"""
	offset: Int = 0, """
	filter the rows returned
	"""
	where: adapter_user_bool_exp): [AdapterUser!] @relation(name: "adapter_users", fkName: ["id","fetch_cycle"], relationFkName: ["user_id","fetch_cycle"], relType: ONE_TO_MANY)
	_compatibilityAPI: Map @goField(forceResolver: true, name: "compatabilityAPI")
	"""
	Returns aggregate of adapterUsers
	"""
	adapterUsers_aggregate("""
	group by columns
	"""
	groupBy: [adapterUsers_aggregate_columns!], """
	distinct on columns
	"""
	distinctOn: [adapterUsers_aggregate_columns!], """
	order by aggregation columns
	"""
	orderBy: [AggregateOrdering!], """
	limit the number of rows returned.
	"""
	limit: Int = 100, """
	skip the first n rows.
	"""
	offset: Int = 0, """
	filter the rows returned
	"""
	where: adapter_user_bool_exp): [adapterUsersAggregate!] @relation(name: "adapter_users", fkName: ["id","fetch_cycle"], relationFkName: ["user_id","fetch_cycle"], relType: ONE_TO_MANY)
}
type adapterDevicesAggregate {
	group: [String!]!
	distinct: [String!]!
	count: Int
	sum("""
	Aggregate functions compute a single result value from a set of input values
	"""
	column: [adapterDevices_aggregate_sum_columns!]!): Map
	avg("""
	Aggregate functions compute a single result value from a set of input values
	"""
	column: [adapterDevices_aggregate_avg_columns!]!): Map
	min("""
	Aggregate functions compute a single result value from a set of input values
	"""
	column: [adapterDevices_aggregate_min_columns!]!): Map
	max("""
	Aggregate functions compute a single result value from a set of input values
	"""
	column: [adapterDevices_aggregate_max_columns!]!): Map
	"""
	Adapter devices that are correlated to this device
	"""
	adapterDevices("""
	limit the number of rows returned.
	"""
	limit: Int = 100, """
	skip the first n rows.
	"""
	offset: Int = 0, """
	filter the rows returned
	"""
	where: adapter_device_bool_exp): [AdapterDevice] @relation(name: "adapter_devices", fkName: ["id","fetch_cycle"], relationFkName: ["device_id","fetch_cycle"], relType: ONE_TO_MANY)
}
enum adapterDevices_aggregate_avg_columns {
	"""
	avg by fetchCycle
	"""
	fetchCycle
	"""
	avg by fetchTime
	"""
	fetchTime
	"""
	avg by lastSeen
	"""
	lastSeen
}
enum adapterDevices_aggregate_columns {
	"""
	groupBy by id
	"""
	id
	"""
	groupBy by fetchCycle
	"""
	fetchCycle
	"""
	groupBy by adapterName
	"""
	adapterName
	"""
	groupBy by deviceId
	"""
	deviceId
	"""
	groupBy by fetchTime
	"""
	fetchTime
	"""
	groupBy by hostname
	"""
	hostname
	"""
	groupBy by name
	"""
	name
	"""
	groupBy by lastSeen
	"""
	lastSeen
	"""
	groupBy by osId
	"""
	osId
	"""
	groupBy by prettyId
	"""
	prettyId
	"""
	groupBy by domain
	"""
	domain
	"""
	groupBy by agentVersion
	"""
	agentVersion
	"""
	groupBy by agentStatus
	"""
	agentStatus
	"""
	groupBy by agentName
	"""
	agentName
	"""
	groupBy by model
	"""
	model
	"""
	groupBy by manufacturer
	"""
	manufacturer
	"""
	groupBy by serial
	"""
	serial
	"""
	groupBy by family
	"""
	family
	"""
	groupBy by biosVersion
	"""
	biosVersion
	"""
	groupBy by biosSerial
	"""
	biosSerial
}
enum adapterDevices_aggregate_max_columns {
	"""
	max by id
	"""
	id
	"""
	max by fetchCycle
	"""
	fetchCycle
	"""
	max by adapterName
	"""
	adapterName
	"""
	max by deviceId
	"""
	deviceId
	"""
	max by fetchTime
	"""
	fetchTime
	"""
	max by hostname
	"""
	hostname
	"""
	max by name
	"""
	name
	"""
	max by lastSeen
	"""
	lastSeen
	"""
	max by osId
	"""
	osId
	"""
	max by prettyId
	"""
	prettyId
	"""
	max by domain
	"""
	domain
	"""
	max by agentVersion
	"""
	agentVersion
	"""
	max by agentStatus
	"""
	agentStatus
	"""
	max by agentName
	"""
	agentName
	"""
	max by model
	"""
	model
	"""
	max by manufacturer
	"""
	manufacturer
	"""
	max by serial
	"""
	serial
	"""
	max by family
	"""
	family
	"""
	max by biosVersion
	"""
	biosVersion
	"""
	max by biosSerial
	"""
	biosSerial
}
enum adapterDevices_aggregate_min_columns {
	"""
	min by id
	"""
	id
	"""
	min by fetchCycle
	"""
	fetchCycle
	"""
	min by adapterName
	"""
	adapterName
	"""
	min by deviceId
	"""
	deviceId
	"""
	min by fetchTime
	"""
	fetchTime
	"""
	min by hostname
	"""
	hostname
	"""
	min by name
	"""
	name
	"""
	min by lastSeen
	"""
	lastSeen
	"""
	min by osId
	"""
	osId
	"""
	min by prettyId
	"""
	prettyId
	"""
	min by domain
	"""
	domain
	"""
	min by agentVersion
	"""
	agentVersion
	"""
	min by agentStatus
	"""
	agentStatus
	"""
	min by agentName
	"""
	agentName
	"""
	min by model
	"""
	model
	"""
	min by manufacturer
	"""
	manufacturer
	"""
	min by serial
	"""
	serial
	"""
	min by family
	"""
	family
	"""
	min by biosVersion
	"""
	biosVersion
	"""
	min by biosSerial
	"""
	biosSerial
}
enum adapterDevices_aggregate_sum_columns {
	"""
	sum by fetchCycle
	"""
	fetchCycle
	"""
	sum by fetchTime
	"""
	fetchTime
	"""
	sum by lastSeen
	"""
	lastSeen
}
type adapterUsersAggregate {
	group: [String!]!
	distinct: [String!]!
	count: Int
	sum("""
	Aggregate functions compute a single result value from a set of input values
	"""
	column: [adapterUsers_aggregate_sum_columns!]!): Map
	avg("""
	Aggregate functions compute a single result value from a set of input values
	"""
	column: [adapterUsers_aggregate_avg_columns!]!): Map
	min("""
	Aggregate functions compute a single result value from a set of input values
	"""
	column: [adapterUsers_aggregate_min_columns!]!): Map
	max("""
	Aggregate functions compute a single result value from a set of input values
	"""
	column: [adapterUsers_aggregate_max_columns!]!): Map
	adapterUsers("""
	limit the number of rows returned.
	"""
	limit: Int = 100, """
	skip the first n rows.
	"""
	offset: Int = 0, """
	filter the rows returned
	"""
	where: adapter_user_bool_exp): [AdapterUser]
}
enum adapterUsers_aggregate_avg_columns {
	"""
	avg by fetchCycle
	"""
	fetchCycle
	"""
	avg by fetchTime
	"""
	fetchTime
	"""
	avg by lastSeen
	"""
	lastSeen
}
enum adapterUsers_aggregate_columns {
	"""
	groupBy by id
	"""
	id
	"""
	groupBy by fetchCycle
	"""
	fetchCycle
	"""
	groupBy by adapterName
	"""
	adapterName
	"""
	groupBy by userId
	"""
	userId
	"""
	groupBy by fetchTime
	"""
	fetchTime
	"""
	groupBy by lastSeen
	"""
	lastSeen
	"""
	groupBy by username
	"""
	username
	"""
	groupBy by firstName
	"""
	firstName
	"""
	groupBy by lastName
	"""
	lastName
	"""
	groupBy by mail
	"""
	mail
}
enum adapterUsers_aggregate_max_columns {
	"""
	max by id
	"""
	id
	"""
	max by fetchCycle
	"""
	fetchCycle
	"""
	max by adapterName
	"""
	adapterName
	"""
	max by userId
	"""
	userId
	"""
	max by fetchTime
	"""
	fetchTime
	"""
	max by lastSeen
	"""
	lastSeen
	"""
	max by username
	"""
	username
	"""
	max by firstName
	"""
	firstName
	"""
	max by lastName
	"""
	lastName
	"""
	max by mail
	"""
	mail
}
enum adapterUsers_aggregate_min_columns {
	"""
	min by id
	"""
	id
	"""
	min by fetchCycle
	"""
	fetchCycle
	"""
	min by adapterName
	"""
	adapterName
	"""
	min by userId
	"""
	userId
	"""
	min by fetchTime
	"""
	fetchTime
	"""
	min by lastSeen
	"""
	lastSeen
	"""
	min by username
	"""
	username
	"""
	min by firstName
	"""
	firstName
	"""
	min by lastName
	"""
	lastName
	"""
	min by mail
	"""
	mail
}
enum adapterUsers_aggregate_sum_columns {
	"""
	sum by fetchCycle
	"""
	fetchCycle
	"""
	sum by fetchTime
	"""
	fetchTime
	"""
	sum by lastSeen
	"""
	lastSeen
}
"""
Boolean filter expression for Adapter
"""
input adapter_bool_exp {
	"""
	filter by id
	"""
	id: AdapterTypeComparator
	"""
	filter by name
	"""
	name: StringComparator
	"""
	filter by properties
	"""
	properties: StringArrayComparator
	AND: [adapter_bool_exp!]
	OR: [adapter_bool_exp!]
	NOT: [adapter_bool_exp!]
}
"""
Boolean filter expression for AdapterData
"""
input adapter_data_bool_exp {
	"""
	filter by adCn
	"""
	adCn: StringComparator
	"""
	filter by adSid
	"""
	adSid: StringComparator
	"""
	filter by adGuid
	"""
	adGuid: StringComparator
	"""
	filter by adName
	"""
	adName: StringComparator
	"""
	filter by adSAMAccountName
	"""
	adSAMAccountName: StringComparator
	"""
	filter by adUserPrincipalName
	"""
	adUserPrincipalName: StringComparator
	"""
	filter by adDisplayName
	"""
	adDisplayName: StringComparator
	"""
	filter by adDistinguishedName
	"""
	adDistinguishedName: StringComparator
	"""
	filter by adCanonicalName
	"""
	adCanonicalName: StringComparator
	"""
	filter by adAccountExpires
	"""
	adAccountExpires: EpochComparator
	"""
	filter by adObjectClass
	"""
	adObjectClass: StringArrayComparator
	"""
	filter by adObjectCategory
	"""
	adObjectCategory: StringComparator
	"""
	filter by adOrganizationalUnit
	"""
	adOrganizationalUnit: StringArrayComparator
	"""
	filter by ad_bad_pwd_count
	"""
	ad_bad_pwd_count: IntComparator
	"""
	filter by adManagedBy
	"""
	adManagedBy: StringComparator
	"""
	filter by adPrimaryGroupId
	"""
	adPrimaryGroupId: IntComparator
	"""
	filter by adPrimaryGroupDn
	"""
	adPrimaryGroupDn: StringComparator
	"""
	filter by adMemberOf
	"""
	adMemberOf: StringArrayComparator
	"""
	filter by adMemberOfFull
	"""
	adMemberOfFull: StringArrayComparator
	"""
	filter by adUsnChanged
	"""
	adUsnChanged: IntComparator
	"""
	filter by adUsnCreated
	"""
	adUsnCreated: IntComparator
	"""
	filter by adIsCriticalSystemObject
	"""
	adIsCriticalSystemObject: BooleanComparator
	"""
	filter by adMsdsAllowedToDelegateTo
	"""
	adMsdsAllowedToDelegateTo: StringArrayComparator
	"""
	filter by adPwdMustChange
	"""
	adPwdMustChange: BooleanComparator
	"""
	filter by adMsdsResultantPso
	"""
	adMsdsResultantPso: StringComparator
	"""
	filter by isSafe
	"""
	isSafe: StringComparator
	"""
	filter by deviceState
	"""
	deviceState: CylanceDeviceStateComparator
	"""
	filter by policyId
	"""
	policyId: StringComparator
	"""
	filter by policyName
	"""
	policyName: StringComparator
	"""
	filter by policiesDetails
	"""
	policiesDetails: StringArrayComparator
	"""
	filter by tenantTag
	"""
	tenantTag: StringComparator
	"""
	filter by zoneNames
	"""
	zoneNames: StringArrayComparator
	"""
	filter by agentVersion
	"""
	agentVersion: StringComparator
	"""
	filter by externalIp
	"""
	externalIp: StringComparator
	"""
	filter by groups
	"""
	groups: cs_group_bool_exp
	"""
	filter by preventionPolicy
	"""
	preventionPolicy: cs_policy_bool_exp
	"""
	filter by sensorUpdatePolicy
	"""
	sensorUpdatePolicy: cs_group_bool_exp
	"""
	filter by csAgentVersion
	"""
	csAgentVersion: StringComparator
	AND: [adapter_data_bool_exp!]
	OR: [adapter_data_bool_exp!]
	NOT: [adapter_data_bool_exp!]
}
"""
Boolean filter expression for AdapterDeviceAdmin
"""
input adapter_device_admin_bool_exp {
	"""
	filter by name
	"""
	name: StringComparator
	"""
	filter by type
	"""
	type: AdminTypeComparator
	AND: [adapter_device_admin_bool_exp!]
	OR: [adapter_device_admin_bool_exp!]
	NOT: [adapter_device_admin_bool_exp!]
}
"""
Order for AdapterDeviceAdmin
"""
enum adapter_device_admin_order_by {
	"""
	Order by name in an ascending order
	"""
	name_ASC
	"""
	Order by name in a descending order
	"""
	name_DESC
}
"""
Boolean filter expression for AdapterDevice
"""
input adapter_device_bool_exp {
	"""
	filter by id
	"""
	id: UUIDComparator
	"""
	filter by fetchCycle
	"""
	fetchCycle: IntComparator
	"""
	filter by adapterId
	"""
	adapterId: AdapterTypeComparator
	"""
	filter by adapter
	"""
	adapter: adapter_bool_exp
	"""
	filter by adapterName
	"""
	adapterName: StringComparator
	"""
	filter by deviceId
	"""
	deviceId: UUIDComparator
	"""
	filter by adapterData
	"""
	adapterData: adapter_data_bool_exp
	"""
	filter by fetchTime
	"""
	fetchTime: EpochComparator
	"""
	filter by hostname
	"""
	hostname: StringComparator
	"""
	filter by name
	"""
	name: StringComparator
	"""
	filter by lastSeen
	"""
	lastSeen: EpochComparator
	"""
	filter by osId
	"""
	osId: UUIDComparator
	"""
	filter by os
	"""
	os: operating_system_bool_exp
	"""
	filter by prettyId
	"""
	prettyId: StringComparator
	"""
	filter by tags
	"""
	tags: tag_bool_exp
	"""
	filter by interfaces
	"""
	interfaces: network_interface_bool_exp
	"""
	filter by lastUsedUsers
	"""
	lastUsedUsers: StringArrayComparator
	"""
	filter by domain
	"""
	domain: StringComparator
	"""
	filter by partOfDomain
	"""
	partOfDomain: BooleanComparator
	"""
	filter by deviceUsers
	"""
	deviceUsers: adapter_device_user_bool_exp
	"""
	filter by localAdmins
	"""
	localAdmins: adapter_device_admin_bool_exp
	"""
	filter by firewallRules
	"""
	firewallRules: firewall_rule_bool_exp
	"""
	filter by installedSoftware
	"""
	installedSoftware: installed_software_bool_exp
	"""
	filter by agentVersion
	"""
	agentVersion: StringComparator
	"""
	filter by agentStatus
	"""
	agentStatus: StringComparator
	"""
	filter by agentName
	"""
	agentName: StringComparator
	"""
	filter by model
	"""
	model: StringComparator
	"""
	filter by manufacturer
	"""
	manufacturer: StringComparator
	"""
	filter by serial
	"""
	serial: StringComparator
	"""
	filter by family
	"""
	family: StringComparator
	"""
	filter by biosVersion
	"""
	biosVersion: StringComparator
	"""
	filter by biosSerial
	"""
	biosSerial: StringComparator
	AND: [adapter_device_bool_exp!]
	OR: [adapter_device_bool_exp!]
	NOT: [adapter_device_bool_exp!]
}
"""
Order for AdapterDevice
"""
enum adapter_device_order_by {
	"""
	Order by fetchCycle in an ascending order
	"""
	fetchCycle_ASC
	"""
	Order by fetchCycle in a descending order
	"""
	fetchCycle_DESC
	"""
	Order by adapterName in an ascending order
	"""
	adapterName_ASC
	"""
	Order by adapterName in a descending order
	"""
	adapterName_DESC
	"""
	Order by fetchTime in an ascending order
	"""
	fetchTime_ASC
	"""
	Order by fetchTime in a descending order
	"""
	fetchTime_DESC
	"""
	Order by hostname in an ascending order
	"""
	hostname_ASC
	"""
	Order by hostname in a descending order
	"""
	hostname_DESC
	"""
	Order by name in an ascending order
	"""
	name_ASC
	"""
	Order by name in a descending order
	"""
	name_DESC
	"""
	Order by lastSeen in an ascending order
	"""
	lastSeen_ASC
	"""
	Order by lastSeen in a descending order
	"""
	lastSeen_DESC
	"""
	Order by prettyId in an ascending order
	"""
	prettyId_ASC
	"""
	Order by prettyId in a descending order
	"""
	prettyId_DESC
	"""
	Order by domain in an ascending order
	"""
	domain_ASC
	"""
	Order by domain in a descending order
	"""
	domain_DESC
	"""
	Order by agentVersion in an ascending order
	"""
	agentVersion_ASC
	"""
	Order by agentVersion in a descending order
	"""
	agentVersion_DESC
	"""
	Order by agentStatus in an ascending order
	"""
	agentStatus_ASC
	"""
	Order by agentStatus in a descending order
	"""
	agentStatus_DESC
	"""
	Order by agentName in an ascending order
	"""
	agentName_ASC
	"""
	Order by agentName in a descending order
	"""
	agentName_DESC
	"""
	Order by model in an ascending order
	"""
	model_ASC
	"""
	Order by model in a descending order
	"""
	model_DESC
	"""
	Order by manufacturer in an ascending order
	"""
	manufacturer_ASC
	"""
	Order by manufacturer in a descending order
	"""
	manufacturer_DESC
	"""
	Order by serial in an ascending order
	"""
	serial_ASC
	"""
	Order by serial in a descending order
	"""
	serial_DESC
	"""
	Order by family in an ascending order
	"""
	family_ASC
	"""
	Order by family in a descending order
	"""
	family_DESC
	"""
	Order by biosVersion in an ascending order
	"""
	biosVersion_ASC
	"""
	Order by biosVersion in a descending order
	"""
	biosVersion_DESC
	"""
	Order by biosSerial in an ascending order
	"""
	biosSerial_ASC
	"""
	Order by biosSerial in a descending order
	"""
	biosSerial_DESC
}
"""
Boolean filter expression for AdapterDeviceUser
"""
input adapter_device_user_bool_exp {
	"""
	filter by deviceId
	"""
	deviceId: UUIDComparator
	"""
	filter by sid
	"""
	sid: StringComparator
	"""
	filter by username
	"""
	username: StringComparator
	"""
	filter by lastUseDate
	"""
	lastUseDate: EpochComparator
	"""
	filter by isLocal
	"""
	isLocal: BooleanComparator
	"""
	filter by isDisabled
	"""
	isDisabled: BooleanComparator
	"""
	filter by isAdmin
	"""
	isAdmin: BooleanComparator
	"""
	filter by userDepartment
	"""
	userDepartment: BooleanComparator
	"""
	filter by passwordMaxAge
	"""
	passwordMaxAge: IntComparator
	"""
	filter by interpreter
	"""
	interpreter: StringComparator
	AND: [adapter_device_user_bool_exp!]
	OR: [adapter_device_user_bool_exp!]
	NOT: [adapter_device_user_bool_exp!]
}
"""
Order for AdapterDeviceUser
"""
enum adapter_device_user_order_by {
	"""
	Order by sid in an ascending order
	"""
	sid_ASC
	"""
	Order by sid in a descending order
	"""
	sid_DESC
	"""
	Order by username in an ascending order
	"""
	username_ASC
	"""
	Order by username in a descending order
	"""
	username_DESC
	"""
	Order by lastUseDate in an ascending order
	"""
	lastUseDate_ASC
	"""
	Order by lastUseDate in a descending order
	"""
	lastUseDate_DESC
	"""
	Order by passwordMaxAge in an ascending order
	"""
	passwordMaxAge_ASC
	"""
	Order by passwordMaxAge in a descending order
	"""
	passwordMaxAge_DESC
	"""
	Order by interpreter in an ascending order
	"""
	interpreter_ASC
	"""
	Order by interpreter in a descending order
	"""
	interpreter_DESC
}
"""
Order for Adapter
"""
enum adapter_order_by {
	"""
	Order by name in an ascending order
	"""
	name_ASC
	"""
	Order by name in a descending order
	"""
	name_DESC
}
"""
Boolean filter expression for AdapterUser
"""
input adapter_user_bool_exp {
	"""
	filter by id
	"""
	id: UUIDComparator
	"""
	filter by fetchCycle
	"""
	fetchCycle: IntComparator
	"""
	filter by adapterId
	"""
	adapterId: AdapterTypeComparator
	"""
	filter by adapter
	"""
	adapter: adapter_bool_exp
	"""
	filter by adapterName
	"""
	adapterName: StringComparator
	"""
	filter by userId
	"""
	userId: UUIDComparator
	"""
	filter by adapterData
	"""
	adapterData: adapter_data_bool_exp
	"""
	filter by fetchTime
	"""
	fetchTime: EpochComparator
	"""
	filter by lastSeen
	"""
	lastSeen: EpochComparator
	"""
	filter by username
	"""
	username: StringComparator
	"""
	filter by firstName
	"""
	firstName: StringComparator
	"""
	filter by lastName
	"""
	lastName: StringComparator
	"""
	filter by mail
	"""
	mail: StringComparator
	"""
	filter by admin
	"""
	admin: BooleanComparator
	"""
	filter by local
	"""
	local: BooleanComparator
	"""
	filter by delegated_admin
	"""
	delegated_admin: BooleanComparator
	"""
	filter by mfa_enforced
	"""
	mfa_enforced: BooleanComparator
	"""
	filter by mfa_enrolled
	"""
	mfa_enrolled: BooleanComparator
	"""
	filter by suspended
	"""
	suspended: BooleanComparator
	"""
	filter by locked
	"""
	locked: BooleanComparator
	"""
	filter by disabled
	"""
	disabled: BooleanComparator
	AND: [adapter_user_bool_exp!]
	OR: [adapter_user_bool_exp!]
	NOT: [adapter_user_bool_exp!]
}
"""
Order for AdapterUser
"""
enum adapter_user_order_by {
	"""
	Order by fetchCycle in an ascending order
	"""
	fetchCycle_ASC
	"""
	Order by fetchCycle in a descending order
	"""
	fetchCycle_DESC
	"""
	Order by adapterName in an ascending order
	"""
	adapterName_ASC
	"""
	Order by adapterName in a descending order
	"""
	adapterName_DESC
	"""
	Order by fetchTime in an ascending order
	"""
	fetchTime_ASC
	"""
	Order by fetchTime in a descending order
	"""
	fetchTime_DESC
	"""
	Order by lastSeen in an ascending order
	"""
	lastSeen_ASC
	"""
	Order by lastSeen in a descending order
	"""
	lastSeen_DESC
	"""
	Order by username in an ascending order
	"""
	username_ASC
	"""
	Order by username in a descending order
	"""
	username_DESC
	"""
	Order by firstName in an ascending order
	"""
	firstName_ASC
	"""
	Order by firstName in a descending order
	"""
	firstName_DESC
	"""
	Order by lastName in an ascending order
	"""
	lastName_ASC
	"""
	Order by lastName in a descending order
	"""
	lastName_DESC
	"""
	Order by mail in an ascending order
	"""
	mail_ASC
	"""
	Order by mail in a descending order
	"""
	mail_DESC
}
type csGroup @generateInputs(where: "cs_group_bool_exp", orderBy: "cs_group_order_by") {
	id: String
	name: String
	createdBy: String
	createdTimestamp: Epoch
	description: String
	groupType: String
	modifiedBy: String
	modifiedTime: Epoch
}
type csPolicy @generateInputs(where: "cs_policy_bool_exp", orderBy: "cs_policy_order_by") {
	name: String
	description: String
	platformName: String
	groups("""
	limit the number of rows returned.
	"""
	limit: Int = 100, """
	skip the first n rows.
	"""
	offset: Int = 0, """
	filter the rows returned
	"""
	where: cs_group_bool_exp): [csGroup]
	enabled: Boolean
	createdBy: String
	createdTime: Epoch
	preventionSettings("""
	limit the number of rows returned.
	"""
	limit: Int = 100, """
	skip the first n rows.
	"""
	offset: Int = 0, """
	filter the rows returned
	"""
	where: cs_prevention_settings_bool_exp): [csPreventionSettings]
	sensorUpdateSettings("""
	limit the number of rows returned.
	"""
	limit: Int = 100, """
	skip the first n rows.
	"""
	offset: Int = 0, """
	filter the rows returned
	"""
	where: cs_sensor_update_settings_bool_exp): [csSensorUpdateSettings]
	"""
	Returns aggregate of groups
	"""
	groups_aggregate("""
	group by columns
	"""
	groupBy: [groups_aggregate_columns!], """
	distinct on columns
	"""
	distinctOn: [groups_aggregate_columns!], """
	order by aggregation columns
	"""
	orderBy: [AggregateOrdering!], """
	limit the number of rows returned.
	"""
	limit: Int = 100, """
	skip the first n rows.
	"""
	offset: Int = 0, """
	filter the rows returned
	"""
	where: cs_group_bool_exp): [groupsAggregate!]
	"""
	Returns aggregate of preventionSettings
	"""
	preventionSettings_aggregate("""
	group by columns
	"""
	groupBy: [preventionSettings_aggregate_columns!], """
	distinct on columns
	"""
	distinctOn: [preventionSettings_aggregate_columns!], """
	order by aggregation columns
	"""
	orderBy: [AggregateOrdering!], """
	limit the number of rows returned.
	"""
	limit: Int = 100, """
	skip the first n rows.
	"""
	offset: Int = 0, """
	filter the rows returned
	"""
	where: cs_prevention_settings_bool_exp): [preventionSettingsAggregate!]
	"""
	Returns aggregate of sensorUpdateSettings
	"""
	sensorUpdateSettings_aggregate("""
	group by columns
	"""
	groupBy: [sensorUpdateSettings_aggregate_columns!], """
	distinct on columns
	"""
	distinctOn: [sensorUpdateSettings_aggregate_columns!], """
	order by aggregation columns
	"""
	orderBy: [AggregateOrdering!], """
	limit the number of rows returned.
	"""
	limit: Int = 100, """
	skip the first n rows.
	"""
	offset: Int = 0, """
	filter the rows returned
	"""
	where: cs_sensor_update_settings_bool_exp): [sensorUpdateSettingsAggregate!]
}
type csPolicySettings @generateInputs(where: "cs_policy_settings_bool_exp", orderBy: "cs_policy_settings_order_by") {
	enabled: Boolean
}
type csPreventionSettings @generateInputs(where: "cs_prevention_settings_bool_exp", orderBy: "cs_prevention_settings_order_by") {
	name: String
	settings("""
	limit the number of rows returned.
	"""
	limit: Int = 100, """
	skip the first n rows.
	"""
	offset: Int = 0, """
	filter the rows returned
	"""
	where: cs_policy_settings_bool_exp): [csPolicySettings]
}
type csSensorUpdateSettings @generateInputs(where: "cs_sensor_update_settings_bool_exp", orderBy: "cs_sensor_update_settings_order_by") {
	build: String
}
"""
Boolean filter expression for csGroup
"""
input cs_group_bool_exp {
	"""
	filter by id
	"""
	id: StringComparator
	"""
	filter by name
	"""
	name: StringComparator
	"""
	filter by createdBy
	"""
	createdBy: StringComparator
	"""
	filter by createdTimestamp
	"""
	createdTimestamp: EpochComparator
	"""
	filter by description
	"""
	description: StringComparator
	"""
	filter by groupType
	"""
	groupType: StringComparator
	"""
	filter by modifiedBy
	"""
	modifiedBy: StringComparator
	"""
	filter by modifiedTime
	"""
	modifiedTime: EpochComparator
	AND: [cs_group_bool_exp!]
	OR: [cs_group_bool_exp!]
	NOT: [cs_group_bool_exp!]
}
"""
Order for csGroup
"""
enum cs_group_order_by {
	"""
	Order by id in an ascending order
	"""
	id_ASC
	"""
	Order by id in a descending order
	"""
	id_DESC
	"""
	Order by name in an ascending order
	"""
	name_ASC
	"""
	Order by name in a descending order
	"""
	name_DESC
	"""
	Order by createdBy in an ascending order
	"""
	createdBy_ASC
	"""
	Order by createdBy in a descending order
	"""
	createdBy_DESC
	"""
	Order by createdTimestamp in an ascending order
	"""
	createdTimestamp_ASC
	"""
	Order by createdTimestamp in a descending order
	"""
	createdTimestamp_DESC
	"""
	Order by description in an ascending order
	"""
	description_ASC
	"""
	Order by description in a descending order
	"""
	description_DESC
	"""
	Order by groupType in an ascending order
	"""
	groupType_ASC
	"""
	Order by groupType in a descending order
	"""
	groupType_DESC
	"""
	Order by modifiedBy in an ascending order
	"""
	modifiedBy_ASC
	"""
	Order by modifiedBy in a descending order
	"""
	modifiedBy_DESC
	"""
	Order by modifiedTime in an ascending order
	"""
	modifiedTime_ASC
	"""
	Order by modifiedTime in a descending order
	"""
	modifiedTime_DESC
}
"""
Boolean filter expression for csPolicy
"""
input cs_policy_bool_exp {
	"""
	filter by name
	"""
	name: StringComparator
	"""
	filter by description
	"""
	description: StringComparator
	"""
	filter by platformName
	"""
	platformName: StringComparator
	"""
	filter by groups
	"""
	groups: cs_group_bool_exp
	"""
	filter by enabled
	"""
	enabled: BooleanComparator
	"""
	filter by createdBy
	"""
	createdBy: StringComparator
	"""
	filter by createdTime
	"""
	createdTime: EpochComparator
	"""
	filter by preventionSettings
	"""
	preventionSettings: cs_prevention_settings_bool_exp
	"""
	filter by sensorUpdateSettings
	"""
	sensorUpdateSettings: cs_sensor_update_settings_bool_exp
	AND: [cs_policy_bool_exp!]
	OR: [cs_policy_bool_exp!]
	NOT: [cs_policy_bool_exp!]
}
"""
Order for csPolicy
"""
enum cs_policy_order_by {
	"""
	Order by name in an ascending order
	"""
	name_ASC
	"""
	Order by name in a descending order
	"""
	name_DESC
	"""
	Order by description in an ascending order
	"""
	description_ASC
	"""
	Order by description in a descending order
	"""
	description_DESC
	"""
	Order by platformName in an ascending order
	"""
	platformName_ASC
	"""
	Order by platformName in a descending order
	"""
	platformName_DESC
	"""
	Order by createdBy in an ascending order
	"""
	createdBy_ASC
	"""
	Order by createdBy in a descending order
	"""
	createdBy_DESC
	"""
	Order by createdTime in an ascending order
	"""
	createdTime_ASC
	"""
	Order by createdTime in a descending order
	"""
	createdTime_DESC
}
"""
Boolean filter expression for csPolicySettings
"""
input cs_policy_settings_bool_exp {
	"""
	filter by enabled
	"""
	enabled: BooleanComparator
	AND: [cs_policy_settings_bool_exp!]
	OR: [cs_policy_settings_bool_exp!]
	NOT: [cs_policy_settings_bool_exp!]
}
"""
Boolean filter expression for csPreventionSettings
"""
input cs_prevention_settings_bool_exp {
	"""
	filter by name
	"""
	name: StringComparator
	"""
	filter by settings
	"""
	settings: cs_policy_settings_bool_exp
	AND: [cs_prevention_settings_bool_exp!]
	OR: [cs_prevention_settings_bool_exp!]
	NOT: [cs_prevention_settings_bool_exp!]
}
"""
Order for csPreventionSettings
"""
enum cs_prevention_settings_order_by {
	"""
	Order by name in an ascending order
	"""
	name_ASC
	"""
	Order by name in a descending order
	"""
	name_DESC
}
"""
Boolean filter expression for csSensorUpdateSettings
"""
input cs_sensor_update_settings_bool_exp {
	"""
	filter by build
	"""
	build: StringComparator
	AND: [cs_sensor_update_settings_bool_exp!]
	OR: [cs_sensor_update_settings_bool_exp!]
	NOT: [cs_sensor_update_settings_bool_exp!]
}
"""
Order for csSensorUpdateSettings
"""
enum cs_sensor_update_settings_order_by {
	"""
	Order by build in an ascending order
	"""
	build_ASC
	"""
	Order by build in a descending order
	"""
	build_DESC
}
"""
Boolean filter expression for Device
"""
input device_bool_exp {
	"""
	filter by id
	"""
	id: UUIDComparator
	"""
	filter by fetchCycle
	"""
	fetchCycle: IntComparator
	"""
	filter by adapterCount
	"""
	adapterCount: IntComparator
	"""
	filter by adapterNames
	"""
	adapterNames: StringArrayComparator
	"""
	filter by hostnames
	"""
	hostnames: StringArrayComparator
	"""
	filter by lastSeen
	"""
	lastSeen: EpochComparator
	"""
	filter by adapterDevices
	"""
	adapterDevices: adapter_device_bool_exp
	"""
	filter by interfaces
	"""
	interfaces: network_interface_bool_exp
	"""
	filter by tags
	"""
	tags: tag_bool_exp
	AND: [device_bool_exp!]
	OR: [device_bool_exp!]
	NOT: [device_bool_exp!]
}
"""
Order for Device
"""
enum device_order_by {
	"""
	Order by fetchCycle in an ascending order
	"""
	fetchCycle_ASC
	"""
	Order by fetchCycle in a descending order
	"""
	fetchCycle_DESC
	"""
	Order by adapterCount in an ascending order
	"""
	adapterCount_ASC
	"""
	Order by adapterCount in a descending order
	"""
	adapterCount_DESC
	"""
	Order by lastSeen in an ascending order
	"""
	lastSeen_ASC
	"""
	Order by lastSeen in a descending order
	"""
	lastSeen_DESC
}
type devicesAggregate {
	group: [String!]!
	distinct: [String!]!
	count: Int
	sum("""
	Aggregate functions compute a single result value from a set of input values
	"""
	column: [devices_aggregate_sum_columns!]!): Map
	avg("""
	Aggregate functions compute a single result value from a set of input values
	"""
	column: [devices_aggregate_avg_columns!]!): Map
	min("""
	Aggregate functions compute a single result value from a set of input values
	"""
	column: [devices_aggregate_min_columns!]!): Map
	max("""
	Aggregate functions compute a single result value from a set of input values
	"""
	column: [devices_aggregate_max_columns!]!): Map
	devices("""
	limit the number of rows returned.
	"""
	limit: Int = 100, """
	skip the first n rows.
	"""
	offset: Int = 0, """
	filter the rows returned
	"""
	where: device_bool_exp): [Device]
}
enum devices_aggregate_avg_columns {
	"""
	avg by fetchCycle
	"""
	fetchCycle
	"""
	avg by adapterCount
	"""
	adapterCount
	"""
	avg by lastSeen
	"""
	lastSeen
}
enum devices_aggregate_columns {
	"""
	groupBy by id
	"""
	id
	"""
	groupBy by fetchCycle
	"""
	fetchCycle
	"""
	groupBy by adapterCount
	"""
	adapterCount
	"""
	groupBy by lastSeen
	"""
	lastSeen
}
enum devices_aggregate_max_columns {
	"""
	max by id
	"""
	id
	"""
	max by fetchCycle
	"""
	fetchCycle
	"""
	max by adapterCount
	"""
	adapterCount
	"""
	max by lastSeen
	"""
	lastSeen
}
enum devices_aggregate_min_columns {
	"""
	min by id
	"""
	id
	"""
	min by fetchCycle
	"""
	fetchCycle
	"""
	min by adapterCount
	"""
	adapterCount
	"""
	min by lastSeen
	"""
	lastSeen
}
enum devices_aggregate_sum_columns {
	"""
	sum by fetchCycle
	"""
	fetchCycle
	"""
	sum by adapterCount
	"""
	adapterCount
	"""
	sum by lastSeen
	"""
	lastSeen
}
type firewallRulesAggregate {
	group: [String!]!
	distinct: [String!]!
	count: Int
	sum("""
	Aggregate functions compute a single result value from a set of input values
	"""
	column: [firewallRules_aggregate_sum_columns!]!): Map
	avg("""
	Aggregate functions compute a single result value from a set of input values
	"""
	column: [firewallRules_aggregate_avg_columns!]!): Map
	min("""
	Aggregate functions compute a single result value from a set of input values
	"""
	column: [firewallRules_aggregate_min_columns!]!): Map
	max("""
	Aggregate functions compute a single result value from a set of input values
	"""
	column: [firewallRules_aggregate_max_columns!]!): Map
	"""
	Firewall rules defined on this adapter device
	"""
	firewallRules("""
	limit the number of rows returned.
	"""
	limit: Int = 100, """
	skip the first n rows.
	"""
	offset: Int = 0, """
	filter the rows returned
	"""
	where: firewall_rule_bool_exp): [FirewallRule] @relation(name: "adapter_device_firewall_rules", fkName: ["id","fetch_cycle"], relationFkName: ["adapter_device_id","fetch_cycle"], relType: MANY_TO_MANY, manyToManyTableName: "firewall_rules", joinOn: ["name"])
}
enum firewallRules_aggregate_avg_columns {
	"""
	avg by srcPort
	"""
	srcPort
	"""
	avg by dstPort
	"""
	dstPort
}
enum firewallRules_aggregate_columns {
	"""
	groupBy by name
	"""
	name
	"""
	groupBy by source
	"""
	source
	"""
	groupBy by target
	"""
	target
	"""
	groupBy by protocol
	"""
	protocol
	"""
	groupBy by srcPort
	"""
	srcPort
	"""
	groupBy by dstPort
	"""
	dstPort
}
enum firewallRules_aggregate_max_columns {
	"""
	max by name
	"""
	name
	"""
	max by source
	"""
	source
	"""
	max by target
	"""
	target
	"""
	max by protocol
	"""
	protocol
	"""
	max by srcPort
	"""
	srcPort
	"""
	max by dstPort
	"""
	dstPort
}
enum firewallRules_aggregate_min_columns {
	"""
	min by name
	"""
	name
	"""
	min by source
	"""
	source
	"""
	min by target
	"""
	target
	"""
	min by protocol
	"""
	protocol
	"""
	min by srcPort
	"""
	srcPort
	"""
	min by dstPort
	"""
	dstPort
}
enum firewallRules_aggregate_sum_columns {
	"""
	sum by srcPort
	"""
	srcPort
	"""
	sum by dstPort
	"""
	dstPort
}
"""
Boolean filter expression for FirewallRule
"""
input firewall_rule_bool_exp {
	"""
	filter by name
	"""
	name: StringComparator
	"""
	filter by source
	"""
	source: StringComparator
	"""
	filter by type
	"""
	type: AccessTypeComparator
	"""
	filter by direction
	"""
	direction: DirectionComparator
	"""
	filter by target
	"""
	target: StringComparator
	"""
	filter by protocol
	"""
	protocol: StringComparator
	"""
	filter by srcPort
	"""
	srcPort: IntComparator
	"""
	filter by dstPort
	"""
	dstPort: IntComparator
	AND: [firewall_rule_bool_exp!]
	OR: [firewall_rule_bool_exp!]
	NOT: [firewall_rule_bool_exp!]
}
"""
Order for FirewallRule
"""
enum firewall_rule_order_by {
	"""
	Order by name in an ascending order
	"""
	name_ASC
	"""
	Order by name in a descending order
	"""
	name_DESC
	"""
	Order by source in an ascending order
	"""
	source_ASC
	"""
	Order by source in a descending order
	"""
	source_DESC
	"""
	Order by target in an ascending order
	"""
	target_ASC
	"""
	Order by target in a descending order
	"""
	target_DESC
	"""
	Order by protocol in an ascending order
	"""
	protocol_ASC
	"""
	Order by protocol in a descending order
	"""
	protocol_DESC
	"""
	Order by srcPort in an ascending order
	"""
	srcPort_ASC
	"""
	Order by srcPort in a descending order
	"""
	srcPort_DESC
	"""
	Order by dstPort in an ascending order
	"""
	dstPort_ASC
	"""
	Order by dstPort in a descending order
	"""
	dstPort_DESC
}
"""
Boolean filter expression for GceTags
"""
input gce_tags_bool_exp {
	"""
	filter by gceKey
	"""
	gceKey: StringComparator
	"""
	filter by gceValue
	"""
	gceValue: StringComparator
	AND: [gce_tags_bool_exp!]
	OR: [gce_tags_bool_exp!]
	NOT: [gce_tags_bool_exp!]
}
"""
Order for GceTags
"""
enum gce_tags_order_by {
	"""
	Order by gceKey in an ascending order
	"""
	gceKey_ASC
	"""
	Order by gceKey in a descending order
	"""
	gceKey_DESC
	"""
	Order by gceValue in an ascending order
	"""
	gceValue_ASC
	"""
	Order by gceValue in a descending order
	"""
	gceValue_DESC
}
type groupsAggregate {
	group: [String!]!
	distinct: [String!]!
	count: Int
	sum("""
	Aggregate functions compute a single result value from a set of input values
	"""
	column: [groups_aggregate_sum_columns!]!): Map
	avg("""
	Aggregate functions compute a single result value from a set of input values
	"""
	column: [groups_aggregate_avg_columns!]!): Map
	min("""
	Aggregate functions compute a single result value from a set of input values
	"""
	column: [groups_aggregate_min_columns!]!): Map
	max("""
	Aggregate functions compute a single result value from a set of input values
	"""
	column: [groups_aggregate_max_columns!]!): Map
	groups("""
	limit the number of rows returned.
	"""
	limit: Int = 100, """
	skip the first n rows.
	"""
	offset: Int = 0, """
	filter the rows returned
	"""
	where: cs_group_bool_exp): [csGroup]
}
enum groups_aggregate_avg_columns {
	"""
	avg by createdTimestamp
	"""
	createdTimestamp
	"""
	avg by modifiedTime
	"""
	modifiedTime
}
enum groups_aggregate_columns {
	"""
	groupBy by id
	"""
	id
	"""
	groupBy by name
	"""
	name
	"""
	groupBy by createdBy
	"""
	createdBy
	"""
	groupBy by createdTimestamp
	"""
	createdTimestamp
	"""
	groupBy by description
	"""
	description
	"""
	groupBy by groupType
	"""
	groupType
	"""
	groupBy by modifiedBy
	"""
	modifiedBy
	"""
	groupBy by modifiedTime
	"""
	modifiedTime
}
enum groups_aggregate_max_columns {
	"""
	max by id
	"""
	id
	"""
	max by name
	"""
	name
	"""
	max by createdBy
	"""
	createdBy
	"""
	max by createdTimestamp
	"""
	createdTimestamp
	"""
	max by description
	"""
	description
	"""
	max by groupType
	"""
	groupType
	"""
	max by modifiedBy
	"""
	modifiedBy
	"""
	max by modifiedTime
	"""
	modifiedTime
}
enum groups_aggregate_min_columns {
	"""
	min by id
	"""
	id
	"""
	min by name
	"""
	name
	"""
	min by createdBy
	"""
	createdBy
	"""
	min by createdTimestamp
	"""
	createdTimestamp
	"""
	min by description
	"""
	description
	"""
	min by groupType
	"""
	groupType
	"""
	min by modifiedBy
	"""
	modifiedBy
	"""
	min by modifiedTime
	"""
	modifiedTime
}
enum groups_aggregate_sum_columns {
	"""
	sum by createdTimestamp
	"""
	createdTimestamp
	"""
	sum by modifiedTime
	"""
	modifiedTime
}
type installedSoftwareAggregate {
	group: [String!]!
	distinct: [String!]!
	count: Int
	sum("""
	Aggregate functions compute a single result value from a set of input values
	"""
	column: [installedSoftware_aggregate_sum_columns!]!): Map
	avg("""
	Aggregate functions compute a single result value from a set of input values
	"""
	column: [installedSoftware_aggregate_avg_columns!]!): Map
	min("""
	Aggregate functions compute a single result value from a set of input values
	"""
	column: [installedSoftware_aggregate_min_columns!]!): Map
	max("""
	Aggregate functions compute a single result value from a set of input values
	"""
	column: [installedSoftware_aggregate_max_columns!]!): Map
	"""
	Software installed on this device
	"""
	installedSoftware("""
	limit the number of rows returned.
	"""
	limit: Int = 100, """
	skip the first n rows.
	"""
	offset: Int = 0, """
	filter the rows returned
	"""
	where: installed_software_bool_exp): [InstalledSoftware] @relation(name: "adapter_device_installed_software", fkName: ["id","fetch_cycle"], relationFkName: ["adapter_device_id","fetch_cycle"], relType: MANY_TO_MANY, manyToManyTableName: "installed_software", joinOn: ["name","version"])
}
enum installedSoftware_aggregate_avg_columns {
	"""
	avg by cveCount
	"""
	cveCount
}
enum installedSoftware_aggregate_columns {
	"""
	groupBy by name
	"""
	name
	"""
	groupBy by version
	"""
	version
	"""
	groupBy by description
	"""
	description
	"""
	groupBy by vendor
	"""
	vendor
	"""
	groupBy by publisher
	"""
	publisher
	"""
	groupBy by cveCount
	"""
	cveCount
	"""
	groupBy by swLicense
	"""
	swLicense
	"""
	groupBy by path
	"""
	path
}
enum installedSoftware_aggregate_max_columns {
	"""
	max by name
	"""
	name
	"""
	max by version
	"""
	version
	"""
	max by description
	"""
	description
	"""
	max by vendor
	"""
	vendor
	"""
	max by publisher
	"""
	publisher
	"""
	max by cveCount
	"""
	cveCount
	"""
	max by swLicense
	"""
	swLicense
	"""
	max by path
	"""
	path
}
enum installedSoftware_aggregate_min_columns {
	"""
	min by name
	"""
	name
	"""
	min by version
	"""
	version
	"""
	min by description
	"""
	description
	"""
	min by vendor
	"""
	vendor
	"""
	min by publisher
	"""
	publisher
	"""
	min by cveCount
	"""
	cveCount
	"""
	min by swLicense
	"""
	swLicense
	"""
	min by path
	"""
	path
}
enum installedSoftware_aggregate_sum_columns {
	"""
	sum by cveCount
	"""
	cveCount
}
"""
Boolean filter expression for InstalledSoftware
"""
input installed_software_bool_exp {
	"""
	filter by name
	"""
	name: StringComparator
	"""
	filter by version
	"""
	version: StringComparator
	"""
	filter by architecture
	"""
	architecture: ArchitectureComparator
	"""
	filter by description
	"""
	description: StringComparator
	"""
	filter by vendor
	"""
	vendor: StringComparator
	"""
	filter by publisher
	"""
	publisher: StringComparator
	"""
	filter by cveCount
	"""
	cveCount: IntComparator
	"""
	filter by swLicense
	"""
	swLicense: StringComparator
	"""
	filter by path
	"""
	path: StringComparator
	AND: [installed_software_bool_exp!]
	OR: [installed_software_bool_exp!]
	NOT: [installed_software_bool_exp!]
}
"""
Order for InstalledSoftware
"""
enum installed_software_order_by {
	"""
	Order by name in an ascending order
	"""
	name_ASC
	"""
	Order by name in a descending order
	"""
	name_DESC
	"""
	Order by version in an ascending order
	"""
	version_ASC
	"""
	Order by version in a descending order
	"""
	version_DESC
	"""
	Order by description in an ascending order
	"""
	description_ASC
	"""
	Order by description in a descending order
	"""
	description_DESC
	"""
	Order by vendor in an ascending order
	"""
	vendor_ASC
	"""
	Order by vendor in a descending order
	"""
	vendor_DESC
	"""
	Order by publisher in an ascending order
	"""
	publisher_ASC
	"""
	Order by publisher in a descending order
	"""
	publisher_DESC
	"""
	Order by cveCount in an ascending order
	"""
	cveCount_ASC
	"""
	Order by cveCount in a descending order
	"""
	cveCount_DESC
	"""
	Order by swLicense in an ascending order
	"""
	swLicense_ASC
	"""
	Order by swLicense in a descending order
	"""
	swLicense_DESC
	"""
	Order by path in an ascending order
	"""
	path_ASC
	"""
	Order by path in a descending order
	"""
	path_DESC
}
type interfacesAggregate {
	group: [String!]!
	distinct: [String!]!
	count: Int
	sum: Map
	avg: Map
	min("""
	Aggregate functions compute a single result value from a set of input values
	"""
	column: [interfaces_aggregate_min_columns!]!): Map
	max("""
	Aggregate functions compute a single result value from a set of input values
	"""
	column: [interfaces_aggregate_max_columns!]!): Map
	interfaces("""
	limit the number of rows returned.
	"""
	limit: Int = 100, """
	skip the first n rows.
	"""
	offset: Int = 0, """
	filter the rows returned
	"""
	where: network_interface_bool_exp): [NetworkInterface] @relation(name: "network_interfaces", fkName: ["id","fetch_cycle"], relationFkName: ["deviceId","fetch_cycle"], relType: ONE_TO_MANY)
}
enum interfaces_aggregate_columns {
	"""
	groupBy by deviceId
	"""
	deviceId
	"""
	groupBy by macAddr
	"""
	macAddr
}
enum interfaces_aggregate_max_columns {
	"""
	max by deviceId
	"""
	deviceId
	"""
	max by macAddr
	"""
	macAddr
}
enum interfaces_aggregate_min_columns {
	"""
	min by deviceId
	"""
	deviceId
	"""
	min by macAddr
	"""
	macAddr
}
"""
Boolean filter expression for NetworkInterface
"""
input network_interface_bool_exp {
	"""
	filter by deviceId
	"""
	deviceId: UUIDComparator
	"""
	filter by macAddr
	"""
	macAddr: MacComparator
	"""
	filter by ipAddrs
	"""
	ipAddrs: IPArrayComparator
	AND: [network_interface_bool_exp!]
	OR: [network_interface_bool_exp!]
	NOT: [network_interface_bool_exp!]
}
"""
Boolean filter expression for OperatingSystem
"""
input operating_system_bool_exp {
	"""
	filter by id
	"""
	id: UUIDComparator
	"""
	filter by type
	"""
	type: StringComparator
	"""
	filter by distribution
	"""
	distribution: StringComparator
	"""
	filter by architecture
	"""
	architecture: IntComparator
	"""
	filter by servicePack
	"""
	servicePack: StringComparator
	"""
	filter by installDate
	"""
	installDate: EpochComparator
	"""
	filter by kernelVersion
	"""
	kernelVersion: StringComparator
	"""
	filter by codeName
	"""
	codeName: StringComparator
	"""
	filter by major
	"""
	major: IntComparator
	"""
	filter by minor
	"""
	minor: IntComparator
	"""
	filter by build
	"""
	build: StringComparator
	"""
	filter by RawName
	"""
	RawName: StringComparator
	AND: [operating_system_bool_exp!]
	OR: [operating_system_bool_exp!]
	NOT: [operating_system_bool_exp!]
}
"""
Order for OperatingSystem
"""
enum operating_system_order_by {
	"""
	Order by type in an ascending order
	"""
	type_ASC
	"""
	Order by type in a descending order
	"""
	type_DESC
	"""
	Order by distribution in an ascending order
	"""
	distribution_ASC
	"""
	Order by distribution in a descending order
	"""
	distribution_DESC
	"""
	Order by architecture in an ascending order
	"""
	architecture_ASC
	"""
	Order by architecture in a descending order
	"""
	architecture_DESC
	"""
	Order by servicePack in an ascending order
	"""
	servicePack_ASC
	"""
	Order by servicePack in a descending order
	"""
	servicePack_DESC
	"""
	Order by installDate in an ascending order
	"""
	installDate_ASC
	"""
	Order by installDate in a descending order
	"""
	installDate_DESC
	"""
	Order by kernelVersion in an ascending order
	"""
	kernelVersion_ASC
	"""
	Order by kernelVersion in a descending order
	"""
	kernelVersion_DESC
	"""
	Order by codeName in an ascending order
	"""
	codeName_ASC
	"""
	Order by codeName in a descending order
	"""
	codeName_DESC
	"""
	Order by major in an ascending order
	"""
	major_ASC
	"""
	Order by major in a descending order
	"""
	major_DESC
	"""
	Order by minor in an ascending order
	"""
	minor_ASC
	"""
	Order by minor in a descending order
	"""
	minor_DESC
	"""
	Order by build in an ascending order
	"""
	build_ASC
	"""
	Order by build in a descending order
	"""
	build_DESC
	"""
	Order by RawName in an ascending order
	"""
	RawName_ASC
	"""
	Order by RawName in a descending order
	"""
	RawName_DESC
}
type preventionSettingsAggregate {
	group: [String!]!
	distinct: [String!]!
	count: Int
	sum: Map
	avg: Map
	min("""
	Aggregate functions compute a single result value from a set of input values
	"""
	column: [preventionSettings_aggregate_min_columns!]!): Map
	max("""
	Aggregate functions compute a single result value from a set of input values
	"""
	column: [preventionSettings_aggregate_max_columns!]!): Map
	preventionSettings("""
	limit the number of rows returned.
	"""
	limit: Int = 100, """
	skip the first n rows.
	"""
	offset: Int = 0, """
	filter the rows returned
	"""
	where: cs_prevention_settings_bool_exp): [csPreventionSettings]
}
enum preventionSettings_aggregate_columns {
	"""
	groupBy by name
	"""
	name
}
enum preventionSettings_aggregate_max_columns {
	"""
	max by name
	"""
	name
}
enum preventionSettings_aggregate_min_columns {
	"""
	min by name
	"""
	name
}
type sensorUpdateSettingsAggregate {
	group: [String!]!
	distinct: [String!]!
	count: Int
	sum: Map
	avg: Map
	min("""
	Aggregate functions compute a single result value from a set of input values
	"""
	column: [sensorUpdateSettings_aggregate_min_columns!]!): Map
	max("""
	Aggregate functions compute a single result value from a set of input values
	"""
	column: [sensorUpdateSettings_aggregate_max_columns!]!): Map
	sensorUpdateSettings("""
	limit the number of rows returned.
	"""
	limit: Int = 100, """
	skip the first n rows.
	"""
	offset: Int = 0, """
	filter the rows returned
	"""
	where: cs_sensor_update_settings_bool_exp): [csSensorUpdateSettings]
}
enum sensorUpdateSettings_aggregate_columns {
	"""
	groupBy by build
	"""
	build
}
enum sensorUpdateSettings_aggregate_max_columns {
	"""
	max by build
	"""
	build
}
enum sensorUpdateSettings_aggregate_min_columns {
	"""
	min by build
	"""
	build
}
"""
Boolean filter expression for Tag
"""
input tag_bool_exp {
	"""
	filter by name
	"""
	name: StringComparator
	"""
	filter by creator
	"""
	creator: StringComparator
	"""
	filter by level
	"""
	level: StringComparator
	AND: [tag_bool_exp!]
	OR: [tag_bool_exp!]
	NOT: [tag_bool_exp!]
}
"""
Order for Tag
"""
enum tag_order_by {
	"""
	Order by name in an ascending order
	"""
	name_ASC
	"""
	Order by name in a descending order
	"""
	name_DESC
	"""
	Order by creator in an ascending order
	"""
	creator_ASC
	"""
	Order by creator in a descending order
	"""
	creator_DESC
	"""
	Order by level in an ascending order
	"""
	level_ASC
	"""
	Order by level in a descending order
	"""
	level_DESC
}
type tagsAggregate {
	group: [String!]!
	distinct: [String!]!
	count: Int
	sum: Map
	avg: Map
	min("""
	Aggregate functions compute a single result value from a set of input values
	"""
	column: [tags_aggregate_min_columns!]!): Map
	max("""
	Aggregate functions compute a single result value from a set of input values
	"""
	column: [tags_aggregate_max_columns!]!): Map
	tags("""
	limit the number of rows returned.
	"""
	limit: Int = 100, """
	skip the first n rows.
	"""
	offset: Int = 0, """
	filter the rows returned
	"""
	where: tag_bool_exp): [Tag] @relation(name: "adapter_device_tags", fkName: ["id"], relationFkName: ["adapter_device_id"], relType: MANY_TO_MANY, manyToManyTableName: "tags", joinOn: ["name"])
}
enum tags_aggregate_columns {
	"""
	groupBy by name
	"""
	name
	"""
	groupBy by creator
	"""
	creator
	"""
	groupBy by level
	"""
	level
}
enum tags_aggregate_max_columns {
	"""
	max by name
	"""
	name
	"""
	max by creator
	"""
	creator
	"""
	max by level
	"""
	level
}
enum tags_aggregate_min_columns {
	"""
	min by name
	"""
	name
	"""
	min by creator
	"""
	creator
	"""
	min by level
	"""
	level
}
"""
Boolean filter expression for User
"""
input user_bool_exp {
	"""
	filter by id
	"""
	id: UUIDComparator
	"""
	filter by fetchCycle
	"""
	fetchCycle: IntComparator
	"""
	filter by adapterCount
	"""
	adapterCount: IntComparator
	"""
	filter by adapterNames
	"""
	adapterNames: StringArrayComparator
	"""
	filter by usernames
	"""
	usernames: StringArrayComparator
	"""
	filter by lastSeen
	"""
	lastSeen: EpochComparator
	"""
	filter by adapterUsers
	"""
	adapterUsers: adapter_user_bool_exp
	AND: [user_bool_exp!]
	OR: [user_bool_exp!]
	NOT: [user_bool_exp!]
}
"""
Order for User
"""
enum user_order_by {
	"""
	Order by fetchCycle in an ascending order
	"""
	fetchCycle_ASC
	"""
	Order by fetchCycle in a descending order
	"""
	fetchCycle_DESC
	"""
	Order by adapterCount in an ascending order
	"""
	adapterCount_ASC
	"""
	Order by adapterCount in a descending order
	"""
	adapterCount_DESC
	"""
	Order by lastSeen in an ascending order
	"""
	lastSeen_ASC
	"""
	Order by lastSeen in a descending order
	"""
	lastSeen_DESC
}
type usersAggregate {
	group: [String!]!
	distinct: [String!]!
	count: Int
	sum("""
	Aggregate functions compute a single result value from a set of input values
	"""
	column: [users_aggregate_sum_columns!]!): Map
	avg("""
	Aggregate functions compute a single result value from a set of input values
	"""
	column: [users_aggregate_avg_columns!]!): Map
	min("""
	Aggregate functions compute a single result value from a set of input values
	"""
	column: [users_aggregate_min_columns!]!): Map
	max("""
	Aggregate functions compute a single result value from a set of input values
	"""
	column: [users_aggregate_max_columns!]!): Map
	users("""
	limit the number of rows returned.
	"""
	limit: Int = 100, """
	skip the first n rows.
	"""
	offset: Int = 0, """
	filter the rows returned
	"""
	where: user_bool_exp): [User]
}
enum users_aggregate_avg_columns {
	"""
	avg by fetchCycle
	"""
	fetchCycle
	"""
	avg by adapterCount
	"""
	adapterCount
	"""
	avg by lastSeen
	"""
	lastSeen
}
enum users_aggregate_columns {
	"""
	groupBy by id
	"""
	id
	"""
	groupBy by fetchCycle
	"""
	fetchCycle
	"""
	groupBy by adapterCount
	"""
	adapterCount
	"""
	groupBy by lastSeen
	"""
	lastSeen
}
enum users_aggregate_max_columns {
	"""
	max by id
	"""
	id
	"""
	max by fetchCycle
	"""
	fetchCycle
	"""
	max by adapterCount
	"""
	adapterCount
	"""
	max by lastSeen
	"""
	lastSeen
}
enum users_aggregate_min_columns {
	"""
	min by id
	"""
	id
	"""
	min by fetchCycle
	"""
	fetchCycle
	"""
	min by adapterCount
	"""
	adapterCount
	"""
	min by lastSeen
	"""
	lastSeen
}
enum users_aggregate_sum_columns {
	"""
	sum by fetchCycle
	"""
	fetchCycle
	"""
	sum by adapterCount
	"""
	adapterCount
	"""
	sum by lastSeen
	"""
	lastSeen
}
