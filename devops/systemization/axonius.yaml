apiVersion: v1
kind: PersistentVolume
metadata:
  name: axonius-logs
  labels:
    type: local
spec:
  capacity:
    storage: 20Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /mnt/data/logs
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: axonius-data
  labels:
    type: local
spec:
  capacity:
    storage: 50Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /mnt/data/DB
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-persistent-storage
  labels:
    app: axonius
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
---
apiVersion: v1
kind: Secret
metadata:
  name: mongo-user
type: Opaque
data:
  username: YXhfdXNlcg==
  password: YXhfcGFzcw==
---
apiVersion: v1
kind: Service
metadata:
  name: mongo
  labels:
    name: mongo
spec:
  ports:
  - port: 27018
    targetPort: 27018
  clusterIP: None
  selector:
    role: mongo
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: mongo
spec:
  serviceName: "mongo"
  replicas: 1
  template:
    metadata:
      labels:
        role: mongo
        environment: test
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: mongo
          image: mongo
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongo-user
                  key: username
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongo-user
                  key: password
            - name: MONGO_INITDB_DATABASE
              value: core
          ports:
            - containerPort: 27018
          volumeMounts:
            - name: axonius-data
              mountPath: /data/db
            - name: axonius-db-init
              mountPath: /docker-entrypoint-initdb.d/create_core_role.js
      nodeSelector:
        ax_type: "cloud" # TODO: Make's it run on a specific node (this case master), Should move this implementation to gui service.
      volumes:
      - name: axonius-data
        persistentVolumeClaim:
          claimName: mongo-persistent-storage
      - name: axonius-db-init
        hostPath:
          path: /home/ubuntu/axonius/devops/systemization/database/create_core_role.js
          type: File
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ax-elastic-pv-claim
  labels:
    app: axonius
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---
apiVersion: v1
kind: Service
metadata:
  name: elk
  labels:
    app: axonius
spec:
  ports:
    - port: 5601
      name: kibana
    - port: 5043
      name: logstash
    - port: 9200
      name: elastic
  selector:
    app: axonius
    tier: system
  type: LoadBalancer
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: elk
  labels:
    app: axonius
spec:
  selector:
    matchLabels:
      app: axonius
      tier: system
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: axonius
        tier: system
    spec:
      containers:
      - image: sebp/elkx
        name: elk
#        imagePullPolicy: Never # TODO: Change to IfNotPresent or Always after aws vpc with default dhcp fix.
        ports:
        - containerPort: 5601
          name: kibana
        - containerPort: 9200
          name: elastic
        - containerPort: 5043
          name: logstash
        volumeMounts:
        - name: axonius-logging-conf
          mountPath: /etc/logstash/conf.d
        - name: axonius-elastic-conf
          mountPath: /etc/elasticsearch/elasticsearch.yml
#      nodeSelector:
#        ax_type: "cloud" # TODO: Make's it run on a specific node (this case master), Should move this implementation to gui service.
      volumes:
      - name: axonius-logs
        persistentVolumeClaim:
          claimName: ax-elastic-pv-claim
      - name: axonius-logging-conf
        hostPath:
          path: /home/ubuntu/axonius/devops/systemization/logging/conf.d
          type: Directory
      - name: axonius-elastic-conf
        hostPath:
          path: /home/ubuntu/axonius/devops/systemization/logging/elasticsearch.yml
          type: File
---
apiVersion: v1
kind: Service
metadata:
  name: core
  labels:
    app: axonius
spec:
  ports:
    - port: 80
  selector:
    app: axonius
    tier: frontend
  type: LoadBalancer
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: core
  labels:
    app: axonius
spec:
  selector:
    matchLabels:
      app: axonius
      tier: frontend
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: axonius
        tier: frontend
    spec:
      containers:
      - image: 405773942477.dkr.ecr.us-east-2.amazonaws.com/axonius/core
        name: core
        imagePullPolicy: Never # TODO: Change to IfNotPresent or Always after aws vpc with default dhcp fix.
        ports:
        - containerPort: 80
          name: core
