#!/usr/bin/env python3
import random
import string
import subprocess
import time
from pathlib import Path

import urllib3

CORTEX_PATH = Path('/home/ubuntu/cortex')
AXONIUS_SETTINGS_PATH = CORTEX_PATH / '.axonius_settings'
BOOTED_FOR_PRODUCTION_MARKER_PATH = AXONIUS_SETTINGS_PATH / '.booted_for_production'
ENCRYPTION_KEY_PATH = AXONIUS_SETTINGS_PATH / '.__key'


def reset_weave():
    subprocess.check_call(['/usr/local/bin/weave', 'reset'])

    # This will practically happen on machines that clients raise first time in their network
    # and generate a new encryption key for weave.
    print('Creating a new encryption key for weave net')
    new_encryption_key = ''.join(random.SystemRandom().choices(string.ascii_uppercase +
                                                               string.ascii_lowercase + string.digits, k=32))
    ENCRYPTION_KEY_PATH.write_text(new_encryption_key)

    weave_encryption_key = ENCRYPTION_KEY_PATH.read_text('utf-8').strip()
    weave_launch_command = ['/usr/local/bin/weave', 'launch',
                            '--dns-domain=axonius.local', '--ipalloc-range', '171.17.0.0/16', '--password',
                            weave_encryption_key]
    print(f'Creating weave network: {weave_launch_command}')
    subprocess.check_call(weave_launch_command)


def shut_down_system():
    subprocess.check_call(['./axonius.sh', 'system', 'down', '--all'], cwd=str(CORTEX_PATH))

    print('Deleting volumes and node_id\'s generated by export installation')
    try:
        subprocess.check_call('docker volume rm $(docker volume ls -q | grep -iv "mongo")', shell=True)
    except subprocess.CalledProcessError:
        # Process returned non-zero due to weave docker being up.
        pass


def raise_system():
    subprocess.check_call(['./axonius.sh', 'system', 'up', '--all', '--prod'],
                          cwd=str(CORTEX_PATH))


def wait_until_weave_is_ready():
    http = urllib3.PoolManager()
    ready = False
    while not ready:
        try:
            result = http.request('GET', 'http://127.0.0.1:6784')
            if result.status == 404:
                ready = True
        except Exception:
            print('Not ready')
            time.sleep(10)


def main():
    # Checks if this is a first boot for a machine (meaning it's new.)

    if BOOTED_FOR_PRODUCTION_MARKER_PATH.exists():
        return

    # Waiting for weave network to be stable.
    wait_until_weave_is_ready()

    # Shutting down and removing data_volumes if this is a new machine.
    shut_down_system()

    # Resetting weave network and regenerating weave encryption key if it's a new machine.
    reset_weave()

    raise_system()

    # Putting marker to notify the system is stable and that it's not a new system.
    BOOTED_FOR_PRODUCTION_MARKER_PATH.touch()


if __name__ == '__main__':
    main()
